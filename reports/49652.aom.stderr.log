INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 71066731
INFO: Loaded 1 modules   (31741 inline 8-bit counters): 31741 [0xe08330, 0xe0ff2d),
INFO: Loaded 1 PC tables (31741 PCs): 31741 [0xe0ff30,0xe8bf00),
/out/av1_dec_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6190000004b4 at pc 0x0000005c3ede bp 0x7fff955fd390 sp 0x7fff955fd388
WRITE of size 1 at 0x6190000004b4 thread T0
SCARINESS: 41 (1-byte-write-heap-buffer-overflow-far-from-bounds)
    #0 0x5c3edd in intra_copy_frame_mvs /src/aom/av1/decoder/decodemv.c:1558:21
    #1 0x5c3edd in av1_read_mode_info /src/aom/av1/decoder/decodemv.c:1575:7
    #2 0x5ac3fc in decode_mbmi_block /src/aom/av1/decoder/decodeframe.c:376:3
    #3 0x5ac3fc in parse_decode_block /src/aom/av1/decoder/decodeframe.c:1121:3
    #4 0x5a7fba in decode_partition /src/aom/av1/decoder/decodeframe.c:1328:26
    #5 0x59abfa in parse_tile_row_mt /src/aom/av1/decoder/decodeframe.c:3143:7
    #6 0x59abfa in row_mt_worker_hook /src/aom/av1/decoder/decodeframe.c:3216:7
    #7 0x87b2b1 in execute /src/aom/aom_util/aom_thread.c:163:27
    #8 0x58fe3e in launch_dec_workers /src/aom/av1/decoder/decodeframe.c
    #9 0x58fe3e in decode_tiles_row_mt /src/aom/av1/decoder/decodeframe.c:3819:3
    #10 0x58fe3e in av1_decode_tg_tiles_and_wrapup /src/aom/av1/decoder/decodeframe.c:5246:9
    #11 0x609c1a in read_one_tile_group_obu /src/aom/av1/decoder/obu.c:361:3
    #12 0x609c1a in aom_decode_frame_from_obus /src/aom/av1/decoder/obu.c:1030:33
    #13 0x5e4649 in av1_receive_compressed_data /src/aom/av1/decoder/decoder.c:469:7
    #14 0x571ba3 in frame_worker_hook /src/aom/av1/av1_dx_iface.c:409:16
    #15 0x87b2b1 in execute /src/aom/aom_util/aom_thread.c:163:27
    #16 0x55fd3b in decode_one /src/aom/av1/av1_dx_iface.c:526:3
    #17 0x55fd3b in decoder_decode /src/aom/av1/av1_dx_iface.c:713:11
    #18 0x55e9e3 in aom_codec_decode /src/aom/aom/src/aom_decoder.c:103:11
    #19 0x55d1dd in LLVMFuzzerTestOneInput /src/aom/examples/av1_dec_fuzzer.cc:56:9
    #20 0x4551f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #21 0x440e82 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #22 0x4466cc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #23 0x46f2c2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #24 0x787343f8b082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #25 0x41f6ad in _start (/out/av1_dec_fuzzer+0x41f6ad)

DEDUP_TOKEN: intra_copy_frame_mvs--av1_read_mode_info--decode_mbmi_block
0x6190000004b4 is located 165 bytes to the right of 911-byte region [0x619000000080,0x61900000040f)
allocated by thread T0 here:
    #0 0x523add in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:129:3
    #1 0x879b28 in aom_memalign /src/aom/aom_mem/aom_mem.c:59:22
    #2 0x879b28 in aom_malloc /src/aom/aom_mem/aom_mem.c:67:40
    #3 0x879b28 in aom_calloc /src/aom/aom_mem/aom_mem.c:72:19
    #4 0x595b0d in ensure_mv_buffer /src/aom/av1/common/av1_common_int.h:1236:7
    #5 0x595b0d in resize_context_buffers /src/aom/av1/decoder/decodeframe.c:1918:3
    #6 0x5950cd in setup_frame_size /src/aom/av1/decoder/decodeframe.c:1974:3
    #7 0x57bbf6 in read_uncompressed_header /src/aom/av1/decoder/decodeframe.c:4801:5
    #8 0x576ad9 in av1_decode_frame_headers_and_setup /src/aom/av1/decoder/decodeframe.c:5160:3
    #9 0x60554d in read_frame_header_obu /src/aom/av1/decoder/obu.c:282:7
    #10 0x60554d in aom_decode_frame_from_obus /src/aom/av1/decoder/obu.c:966:31
    #11 0x5e4649 in av1_receive_compressed_data /src/aom/av1/decoder/decoder.c:469:7
    #12 0x571ba3 in frame_worker_hook /src/aom/av1/av1_dx_iface.c:409:16
    #13 0x87b2b1 in execute /src/aom/aom_util/aom_thread.c:163:27
    #14 0x55fd3b in decode_one /src/aom/av1/av1_dx_iface.c:526:3
    #15 0x55fd3b in decoder_decode /src/aom/av1/av1_dx_iface.c:713:11
    #16 0x55e9e3 in aom_codec_decode /src/aom/aom/src/aom_decoder.c:103:11
    #17 0x55d1dd in LLVMFuzzerTestOneInput /src/aom/examples/av1_dec_fuzzer.cc:56:9
    #18 0x4551f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #19 0x440e82 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #20 0x4466cc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #21 0x46f2c2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #22 0x787343f8b082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)

DEDUP_TOKEN: __interceptor_malloc--aom_memalign--aom_malloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/aom/av1/decoder/decodemv.c:1558:21 in intra_copy_frame_mvs
Shadow bytes around the buggy address:
  0x0c327fff8040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fff8050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fff8060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fff8070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fff8080: 00 07 fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x0c327fff8090: fa fa fa fa fa fa[fa]fa fa fa fa fa fa fa fa fa
  0x0c327fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fff80c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fff80d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fff80e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING