INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 106952868
INFO: Loaded 1 modules   (40891 inline 8-bit counters): 40891 [0x8745260, 0x874f21b),
INFO: Loaded 1 PC tables (40891 PCs): 40891 [0x86a7924,0x86f76fc),
/out/decompress_frame_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==12==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xef40383d at pc 0x08170fe4 bp 0xfffa60e8 sp 0xfffa5cc8
READ of size 6 at 0xef40383d thread T0
SCARINESS: 20 (6-byte-read-heap-buffer-overflow)
    #0 0x8170fe3 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3
    #1 0x82426c5 in get_meta_from_header /src/c-blosc2/blosc/frame.c:1202:5
    #2 0x82426c5 in frame_get_metalayers /src/c-blosc2/blosc/frame.c:1250:9
    #3 0x8244ae8 in frame_to_schunk /src/c-blosc2/blosc/frame.c:1637:8
    #4 0x82324d9 in blosc2_schunk_from_buffer /src/c-blosc2/blosc/schunk.c:446:27
    #5 0x81a939f in LLVMFuzzerTestOneInput /src/c-blosc2/tests/fuzz/fuzz_decompress_frame.c:23:27
    #6 0x80a37f1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #7 0x808dd8e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #8 0x8093cb4 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #9 0x80bd497 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0xf422f646 in __libc_start_main (/lib32/libc.so.6+0x18646)
    #11 0x8068238 in _start (/out/decompress_frame_fuzzer+0x8068238)

DEDUP_TOKEN: __asan_memcpy--get_meta_from_header--frame_get_metalayers
0xef40383d is located 0 bytes to the right of 173-byte region [0xef403790,0xef40383d)
allocated by thread T0 here:
    #0 0x8171c65 in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x8082544 in operator new(unsigned int) (/out/decompress_frame_fuzzer+0x8082544)
    #2 0x808dd8e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #3 0x8093cb4 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #4 0x80bd497 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0xf422f646 in __libc_start_main (/lib32/libc.so.6+0x18646)

DEDUP_TOKEN: malloc--operator new(unsigned int)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3 in __asan_memcpy
Shadow bytes around the buggy address:
  0x3de806b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3de806c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3de806d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3de806e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3de806f0: fa fa 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x3de80700: 00 00 00 00 00 00 00[05]fa fa fa fa fa fa fa fa
  0x3de80710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3de80720: 00 00 00 00 00 05 fa fa fa fa fa fa fa fa fd fd
  0x3de80730: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x3de80740: fd fd fd fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3de80750: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==12==ABORTING