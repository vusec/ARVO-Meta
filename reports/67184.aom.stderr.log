INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 71056748
INFO: Loaded 1 modules   (30955 inline 8-bit counters): 30955 [0xef3d30, 0xefb61b),
INFO: Loaded 1 PC tables (30955 PCs): 30955 [0xefb620,0xf744d0),
/out/av1_dec_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x611000000382 at pc 0x0000007bcebe bp 0x733da63ff7e0 sp 0x733da63ff7d8
READ of size 1 at 0x611000000382 thread T12 (aom tile worker)
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x7bcebd in od_ec_dec_refill /src/aom/aom_dsp/entdec.c:94:26
    #1 0x7bcebd in od_ec_dec_init /src/aom/aom_dsp/entdec.c:152:3
    #2 0x7bc98c in aom_reader_init /src/aom/aom_dsp/bitreader.c:20:3
    #3 0x5b05a7 in setup_bool_decoder /src/aom/av1/decoder/decodeframe.c:1412:7
    #4 0x5b05a7 in tile_worker_hook_init /src/aom/av1/decoder/decodeframe.c:2906:3
    #5 0x5ac7c4 in row_mt_worker_hook /src/aom/av1/decoder/decodeframe.c:3212:7
    #6 0x944c2d in execute /src/aom/aom_util/aom_thread.c:195:27
    #7 0x944c2d in thread_loop /src/aom/aom_util/aom_thread.c:82:7
    #8 0x733db130f608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8608) (BuildId: c6d0d79d906d62bb768421fc6dada0d5e729f177)
    #9 0x733db1209352 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x11f352) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: od_ec_dec_refill--od_ec_dec_init--aom_reader_init
0x611000000382 is located 0 bytes to the right of 194-byte region [0x6110000002c0,0x611000000382)
allocated by thread T0 here:
    #0 0x52ef86 in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x4ad987 in operator new(unsigned long) cxa_noexception.cpp
    #2 0x429552 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #3 0x42edfc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #4 0x458332 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0x733db110e082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: __interceptor_malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
Thread T12 (aom tile worker) created by T0 here:
    #0 0x51867c in pthread_create /src/llvm-project/compiler-rt/lib/asan/asan_interceptors.cpp:208:3
    #1 0x943f58 in reset /src/aom/aom_util/aom_thread.c:170:11
    #2 0x5a96f1 in decode_mt_init /src/aom/av1/decoder/decodeframe.c:3487:31
    #3 0x59e40c in decode_tiles_row_mt /src/aom/av1/decoder/decodeframe.c:3770:3
    #4 0x59e40c in av1_decode_tg_tiles_and_wrapup /src/aom/av1/decoder/decodeframe.c:5254:9
    #5 0x61a314 in read_one_tile_group_obu /src/aom/av1/decoder/obu.c:361:3
    #6 0x61a314 in aom_decode_frame_from_obus /src/aom/av1/decoder/obu.c:1030:33
    #7 0x5f35ff in av1_receive_compressed_data /src/aom/av1/decoder/decoder.c:474:7
    #8 0x5817c2 in frame_worker_hook /src/aom/av1/av1_dx_iface.c:413:16
    #9 0x9445df in execute /src/aom/aom_util/aom_thread.c:195:27
    #10 0x56f789 in decode_one /src/aom/av1/av1_dx_iface.c:550:3
    #11 0x56f789 in decoder_decode /src/aom/av1/av1_dx_iface.c:737:11
    #12 0x56e3d1 in aom_codec_decode /src/aom/aom/src/aom_decoder.c:103:11
    #13 0x56c799 in LLVMFuzzerTestOneInput /src/aom/examples/av1_dec_fuzzer.cc:71:9
    #14 0x43ddf3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x429552 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #16 0x42edfc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #17 0x458332 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x733db110e082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: pthread_create--reset--decode_mt_init
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/aom/aom_dsp/entdec.c:94:26 in od_ec_dec_refill
Shadow bytes around the buggy address:
  0x0c227fff8020: 00 00 00 fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c227fff8040: 00 00 00 00 00 00 00 00 02 fa fa fa fa fa fa fa
  0x0c227fff8050: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c227fff8060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c227fff8070:[02]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c227fff8090: 00 00 00 00 00 00 00 00 00 00 07 fa fa fa fa fa
  0x0c227fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff80c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING