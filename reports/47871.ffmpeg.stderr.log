=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x783f987fe800 at pc 0x0000007c6ed4 bp 0x7ffe813c2970 sp 0x7ffe813c2968
READ of size 1 at 0x783f987fe800 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x7c6ed3 in ff_jpegls_decode_picture /src/ffmpeg/libavcodec/jpeglsdec.c:500:46
    #1 0x53dfc1 in ff_mjpeg_decode_sos /src/ffmpeg/libavcodec/mjpegdec.c:1764:24
    #2 0x5512a4 in ff_mjpeg_receive_frame /src/ffmpeg/libavcodec/mjpegdec.c:2617:24
    #3 0x519280 in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:532:15
    #4 0x518f17 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:604:15
    #5 0x4ff985 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:482:25
    #6 0xdad0da in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7
    #7 0xdacead in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:318:12
    #8 0x783f997b9082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #9 0x443afd in _start (/out/ffmpeg_AV_CODEC_ID_AMV_fuzzer+0x443afd)

DEDUP_TOKEN: ff_jpegls_decode_picture--ff_mjpeg_decode_sos--ff_mjpeg_receive_frame
0x783f987fe800 is located 0 bytes to the right of 786432-byte region [0x783f9873e800,0x783f987fe800)
allocated by thread T0 here:
    #0 0x4c3827 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:210:3
    #1 0xd00a7c in av_malloc /src/ffmpeg/libavutil/mem.c:105:9
    #2 0xcb4529 in av_buffer_alloc /src/ffmpeg/libavutil/buffer.c:82:12
    #3 0x50216c in fuzz_video_get_buffer /src/ffmpeg/tools/target_dec_fuzzer.c:131:25
    #4 0x50216c in fuzz_get_buffer2 /src/ffmpeg/tools/target_dec_fuzzer.c:152:18
    #5 0x524944 in ff_get_buffer /src/ffmpeg/libavcodec/decode.c:1458:11
    #6 0x538ce3 in ff_mjpeg_decode_sof /src/ffmpeg/libavcodec/mjpegdec.c:732:13
    #7 0x5507b7 in ff_mjpeg_receive_frame /src/ffmpeg/libavcodec/mjpegdec.c
    #8 0x519280 in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:532:15
    #9 0x518f17 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:604:15
    #10 0x4ff985 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:482:25
    #11 0xdad0da in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7

DEDUP_TOKEN: posix_memalign--av_malloc--av_buffer_alloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/jpeglsdec.c:500:46 in ff_jpegls_decode_picture
Shadow bytes around the buggy address:
  0x0f08730f7cb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f08730f7cc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f08730f7cd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f08730f7ce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f08730f7cf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0f08730f7d00:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0f08730f7d10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0f08730f7d20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0f08730f7d30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0f08730f7d40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0f08730f7d50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING