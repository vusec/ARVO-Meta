=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60600000011d at pc 0x00000049ee81 bp 0x7ffd17a98af0 sp 0x7ffd17a982c0
READ of size 40 at 0x60600000011d thread T0
SCARINESS: 26 (multi-byte-read-heap-buffer-overflow)
    #0 0x49ee80 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3
    #1 0x513137 in pj_memcpy /src/pjsip/pjlib/build/../include/pj/string.h:797:12
    #2 0x513137 in pj_strdup /src/pjsip/pjlib/build/../include/pj/string_i.h:43:9
    #3 0x4ea3b9 in decode_string_attr /src/pjsip/pjnath/build/../src/pjnath/stun_msg.c:1211:5
    #4 0x4e4902 in pj_stun_msg_decode /src/pjsip/pjnath/build/../src/pjnath/stun_msg.c:2446:22
    #5 0x4dd275 in stun_parse /src/pjsip/tests/fuzz/fuzz-stun.c:43:14
    #6 0x4dd275 in LLVMFuzzerTestOneInput /src/pjsip/tests/fuzz/fuzz-stun.c:85:11
    #7 0x531b9a in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7
    #8 0x53196c in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:318:12
    #9 0x76bfebbd4082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #10 0x41e6bd in _start (/out/fuzz-stun+0x41e6bd)

DEDUP_TOKEN: __asan_memcpy--pj_memcpy--pj_strdup
0x60600000011d is located 0 bytes to the right of 61-byte region [0x6060000000e0,0x60600000011d)
allocated by thread T0 here:
    #0 0x49fcce in __interceptor_calloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:77:3
    #1 0x4dd1d0 in LLVMFuzzerTestOneInput /src/pjsip/tests/fuzz/fuzz-stun.c:65:22
    #2 0x531b9a in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7

DEDUP_TOKEN: __interceptor_calloc--LLVMFuzzerTestOneInput--ExecuteFilesOnyByOne
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3 in __asan_memcpy
Shadow bytes around the buggy address:
  0x0c0c7fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0c7fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0c7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c0c7fff8000: fa fa fa fa fd fd fd fd fd fd fd fd fa fa fa fa
  0x0c0c7fff8010: 00 00 00 00 00 00 01 fa fa fa fa fa 00 00 00 00
=>0x0c0c7fff8020: 00 00 00[05]fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c0c7fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING