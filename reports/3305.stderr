Unable to find image 'n132/arvo:3305-vul' locally
3305-vul: Pulling from n132/arvo
60730f960363: Pulling fs layer
f7d512d82502: Pulling fs layer
a7cad26d0357: Pulling fs layer
25bb6f291ceb: Pulling fs layer
630ceed02486: Pulling fs layer
f68385c570b6: Pulling fs layer
08a89233337b: Pulling fs layer
c0d496745e1b: Pulling fs layer
f6236bf1e673: Pulling fs layer
09946a2a1c6b: Pulling fs layer
c99e5675255a: Pulling fs layer
f753b7fee0d7: Pulling fs layer
abce4fa456c0: Pulling fs layer
8be5acfe9eed: Pulling fs layer
cc46507875f3: Pulling fs layer
cf3b08eea789: Pulling fs layer
933288c4ceb8: Pulling fs layer
659747b9ef9a: Pulling fs layer
9560e2ef0ccd: Pulling fs layer
e0e833adbced: Pulling fs layer
9c5725e00c10: Pulling fs layer
1f89405bc916: Pulling fs layer
c99e5675255a: Waiting
30ba619eb698: Pulling fs layer
f753b7fee0d7: Waiting
b6ec930f0d3b: Pulling fs layer
abce4fa456c0: Waiting
4f4fb700ef54: Pulling fs layer
8be5acfe9eed: Waiting
cc46507875f3: Waiting
b8f08cce68ab: Pulling fs layer
5d1384113fec: Pulling fs layer
cf3b08eea789: Waiting
5e12c698880f: Pulling fs layer
933288c4ceb8: Waiting
659747b9ef9a: Waiting
4f4fb700ef54: Waiting
9560e2ef0ccd: Waiting
b8f08cce68ab: Waiting
e0e833adbced: Waiting
5d1384113fec: Waiting
5e12c698880f: Waiting
9c5725e00c10: Waiting
1f89405bc916: Waiting
30ba619eb698: Waiting
b6ec930f0d3b: Waiting
c0d496745e1b: Waiting
f6236bf1e673: Waiting
f68385c570b6: Waiting
09946a2a1c6b: Waiting
08a89233337b: Waiting
25bb6f291ceb: Waiting
630ceed02486: Waiting
a7cad26d0357: Verifying Checksum
a7cad26d0357: Download complete
f7d512d82502: Download complete
25bb6f291ceb: Verifying Checksum
25bb6f291ceb: Download complete
60730f960363: Verifying Checksum
60730f960363: Download complete
630ceed02486: Verifying Checksum
630ceed02486: Download complete
08a89233337b: Verifying Checksum
08a89233337b: Download complete
c0d496745e1b: Verifying Checksum
c0d496745e1b: Download complete
f68385c570b6: Verifying Checksum
f68385c570b6: Download complete
60730f960363: Pull complete
f7d512d82502: Pull complete
a7cad26d0357: Pull complete
25bb6f291ceb: Pull complete
630ceed02486: Pull complete
f6236bf1e673: Download complete
f68385c570b6: Pull complete
08a89233337b: Pull complete
c99e5675255a: Verifying Checksum
c99e5675255a: Download complete
abce4fa456c0: Verifying Checksum
abce4fa456c0: Download complete
c0d496745e1b: Pull complete
f6236bf1e673: Pull complete
8be5acfe9eed: Download complete
cc46507875f3: Verifying Checksum
cc46507875f3: Download complete
cf3b08eea789: Verifying Checksum
cf3b08eea789: Download complete
f753b7fee0d7: Verifying Checksum
f753b7fee0d7: Download complete
933288c4ceb8: Verifying Checksum
933288c4ceb8: Download complete
09946a2a1c6b: Verifying Checksum
09946a2a1c6b: Download complete
e0e833adbced: Verifying Checksum
e0e833adbced: Download complete
659747b9ef9a: Verifying Checksum
659747b9ef9a: Download complete
1f89405bc916: Download complete
b6ec930f0d3b: Verifying Checksum
b6ec930f0d3b: Download complete
4f4fb700ef54: Download complete
b8f08cce68ab: Download complete
5d1384113fec: Verifying Checksum
5d1384113fec: Download complete
9c5725e00c10: Verifying Checksum
9c5725e00c10: Download complete
5e12c698880f: Verifying Checksum
5e12c698880f: Download complete
09946a2a1c6b: Pull complete
c99e5675255a: Pull complete
f753b7fee0d7: Pull complete
abce4fa456c0: Pull complete
8be5acfe9eed: Pull complete
cc46507875f3: Pull complete
cf3b08eea789: Pull complete
933288c4ceb8: Pull complete
659747b9ef9a: Pull complete
9560e2ef0ccd: Pull complete
e0e833adbced: Pull complete
9c5725e00c10: Pull complete
1f89405bc916: Pull complete
30ba619eb698: Verifying Checksum
30ba619eb698: Download complete
30ba619eb698: Pull complete
b6ec930f0d3b: Pull complete
4f4fb700ef54: Pull complete
b8f08cce68ab: Pull complete
5d1384113fec: Pull complete
5e12c698880f: Pull complete
Digest: sha256:8420d985bd9bd09fb2f86c79e4f5b7b591a5e368a45d81145b314c43e13cea9b
Status: Downloaded newer image for n132/arvo:3305-vul
INFO: Seed: 3723976231
INFO: Loaded 1 modules   (6941 guards): 6941 [0x98b000, 0x991c74), 
/out/opj_decompress_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000000dc4 at pc 0x0000005ddb87 bp 0x7fffb82d82d0 sp 0x7fffb82d82c8
READ of size 4 at 0x603000000dc4 thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x5ddb86 in opj_mct_decode_real /src/openjpeg/src/lib/openjp2/mct.c:433:25
    #1 0x5fce17 in opj_tcd_mct_decode /src/openjpeg/src/lib/openjp2/tcd.c
    #2 0x5fabfa in opj_tcd_decode_tile /src/openjpeg/src/lib/openjp2/tcd.c:1630:8
    #3 0x5a5954 in opj_j2k_decode_tile /src/openjpeg/src/lib/openjp2/j2k.c:8900:11
    #4 0x5c1348 in opj_j2k_decode_tiles /src/openjpeg/src/lib/openjp2/j2k.c:10620:15
    #5 0x5a047c in opj_j2k_exec /src/openjpeg/src/lib/openjp2/j2k.c:8066:33
    #6 0x5ab72f in opj_j2k_decode /src/openjpeg/src/lib/openjp2/j2k.c:10857:11
    #7 0x518a6c in LLVMFuzzerTestOneInput /src/openjpeg/./tests/fuzzers/opj_decompress_fuzzer.cpp:197:13
    #8 0x539f6e in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:463:13
    #9 0x5199a5 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:273:6
    #10 0x524c3f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:689:9
    #11 0x519048 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #12 0x7ceafd44f83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x41c298 in _start (/out/opj_decompress_fuzzer+0x41c298)

DEDUP_TOKEN: opj_mct_decode_real--opj_tcd_mct_decode--opj_tcd_decode_tile
0x603000000dc4 is located 0 bytes to the right of 4-byte region [0x603000000dc0,0x603000000dc4)
allocated by thread T0 here:
    #0 0x4ddf60 in __interceptor_posix_memalign /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:157
    #1 0x597a8f in opj_aligned_alloc_n /src/openjpeg/src/lib/openjp2/opj_malloc.c:61:9
    #2 0x5f4922 in opj_alloc_tile_component_data /src/openjpeg/src/lib/openjp2/tcd.c:691:39
    #3 0x5fa22a in opj_tcd_decode_tile /src/openjpeg/src/lib/openjp2/tcd.c:1495:18
    #4 0x5a5954 in opj_j2k_decode_tile /src/openjpeg/src/lib/openjp2/j2k.c:8900:11
    #5 0x5c1348 in opj_j2k_decode_tiles /src/openjpeg/src/lib/openjp2/j2k.c:10620:15
    #6 0x5a047c in opj_j2k_exec /src/openjpeg/src/lib/openjp2/j2k.c:8066:33
    #7 0x5ab72f in opj_j2k_decode /src/openjpeg/src/lib/openjp2/j2k.c:10857:11
    #8 0x518a6c in LLVMFuzzerTestOneInput /src/openjpeg/./tests/fuzzers/opj_decompress_fuzzer.cpp:197:13
    #9 0x539f6e in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:463:13
    #10 0x5199a5 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:273:6
    #11 0x524c3f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:689:9
    #12 0x519048 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #13 0x7ceafd44f83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: __interceptor_posix_memalign--opj_aligned_alloc_n--opj_alloc_tile_component_data
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/openjpeg/src/lib/openjp2/mct.c:433:25 in opj_mct_decode_real
Shadow bytes around the buggy address:
  0x0c067fff8160: 00 fa fa fa 00 00 00 00 fa fa 00 00 00 fa fa fa
  0x0c067fff8170: fd fd fd fd fa fa fd fd fd fd fa fa fd fd fd fd
  0x0c067fff8180: fa fa fd fd fd fd fa fa 00 00 00 00 fa fa 00 00
  0x0c067fff8190: 00 fa fa fa 00 00 00 00 fa fa 00 00 00 fa fa fa
  0x0c067fff81a0: fd fd fd fd fa fa fd fd fd fd fa fa 00 04 fa fa
=>0x0c067fff81b0: fa fa 00 04 fa fa fa fa[04]fa fa fa fa fa fd fd
  0x0c067fff81c0: fd fa fa fa 00 00 00 fa fa fa 04 fa fa fa fa fa
  0x0c067fff81d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff81e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff81f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
