=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x62d000009400 at pc 0x0000004ef26a bp 0x7ffff1e9f510 sp 0x7ffff1e9ecd8
WRITE of size 160 at 0x62d000009400 thread T0
SCARINESS: 45 (multi-byte-write-heap-buffer-overflow)
    #0 0x4ef269 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3
    #1 0x6ab7c4 in nb_decode /src/ffmpeg/libavcodec/speexdec.c:1076:13
    #2 0x6b0bbe in sb_decode /src/ffmpeg/libavcodec/speexdec.c:1235:15
    #3 0x69f973 in speex_decode_frame /src/ffmpeg/libavcodec/speexdec.c:1557:15
    #4 0x5b06bd in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:326:15
    #5 0x5ae152 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:521:15
    #6 0x581ca3 in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:541:15
    #7 0x58155c in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:608:15
    #8 0x5383c1 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:390:25
    #9 0x1927365 in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:191:7
    #10 0x19271d5 in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c
    #11 0x7a9b04eb7082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #12 0x46f60d in _start (/out/ffmpeg_AV_CODEC_ID_SPEEX_fuzzer+0x46f60d)

DEDUP_TOKEN: __asan_memcpy--nb_decode--sb_decode
0x62d000009400 is located 0 bytes to the right of 36864-byte region [0x62d000000400,0x62d000009400)
allocated by thread T0 here:
    #0 0x4f0867 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:210:3
    #1 0x17b02c1 in av_malloc /src/ffmpeg/libavutil/mem.c:104:9
    #2 0x16c28c9 in av_buffer_alloc /src/ffmpeg/libavutil/buffer.c:82:12
    #3 0x16c695a in pool_alloc_buffer /src/ffmpeg/libavutil/buffer.c:366:26
    #4 0x16c6325 in av_buffer_pool_get /src/ffmpeg/libavutil/buffer.c:404:15
    #5 0x59ef61 in audio_get_buffer /src/ffmpeg/libavcodec/decode.c:1388:25
    #6 0x5965a3 in avcodec_default_get_buffer2 /src/ffmpeg/libavcodec/decode.c:1471:16
    #7 0x5a44e3 in ff_get_buffer /src/ffmpeg/libavcodec/decode.c:1696:11
    #8 0x69e8af in speex_decode_frame /src/ffmpeg/libavcodec/speexdec.c:1552:16
    #9 0x5b06bd in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:326:15
    #10 0x5ae152 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:521:15
    #11 0x581ca3 in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:541:15
    #12 0x58155c in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:608:15
    #13 0x5383c1 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:390:25
    #14 0x1927365 in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:191:7

DEDUP_TOKEN: posix_memalign--av_malloc--av_buffer_alloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3 in __asan_memcpy
Shadow bytes around the buggy address:
  0x0c5a7fff9230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5a7fff9240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5a7fff9250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5a7fff9260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5a7fff9270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c5a7fff9280:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5a7fff9290: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5a7fff92a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5a7fff92b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5a7fff92c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5a7fff92d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING