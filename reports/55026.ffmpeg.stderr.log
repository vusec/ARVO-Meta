INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 278913596
INFO: Loaded 1 modules   (55908 inline 8-bit counters): 55908 [0x8aa2c00, 0x8ab0664),
INFO: Loaded 1 PC tables (55908 PCs): 55908 [0x895dec0,0x89cb1e0),
/out/ffmpeg_AV_CODEC_ID_BINK_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xeb203b80 at pc 0x081abd33 bp 0xffb9db18 sp 0xffb9d6f8
WRITE of size 16 at 0xeb203b80 thread T0
SCARINESS: 45 (multi-byte-write-heap-buffer-overflow)
    #0 0x81abd32 in __asan_memset /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:26:3
    #1 0x821483b in fill_block16_c /src/ffmpeg/libavcodec/blockdsp.c:42:9
    #2 0x820a01d in bink_decode_plane /src/ffmpeg/libavcodec/bink.c
    #3 0x82025fe in decode_frame /src/ffmpeg/libavcodec/bink.c:1289:24
    #4 0x821dd65 in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:285:15
    #5 0x821dd65 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:541:15
    #6 0x821dd65 in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:560:15
    #7 0x821d4d6 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:635:15
    #8 0x81f24fe in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:512:25
    #9 0x80b0c9e in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #10 0x809bbfe in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #11 0x80a1800 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #12 0x80cb3e7 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0xf0bcfed4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aed4) (BuildId: f0e9c9950026d7f234a4a1d03670a7ed59ceb726)
    #14 0x8092d45 in _start (/out/ffmpeg_AV_CODEC_ID_BINK_fuzzer+0x8092d45)

DEDUP_TOKEN: __asan_memset--fill_block16_c--bink_decode_plane
0xeb203b80 is located 0 bytes to the right of 512-byte region [0xeb203980,0xeb203b80)
allocated by thread T0 here:
    #0 0x81ad34a in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x87a6bef in av_malloc /src/ffmpeg/libavutil/mem.c:105:9
    #2 0x8762a4a in av_buffer_alloc /src/ffmpeg/libavutil/buffer.c:82:12
    #3 0x81f5306 in fuzz_video_get_buffer /src/ffmpeg/tools/target_dec_fuzzer.c:131:25
    #4 0x81f5306 in fuzz_get_buffer2 /src/ffmpeg/tools/target_dec_fuzzer.c:152:18
    #5 0x822874e in ff_get_buffer /src/ffmpeg/libavcodec/decode.c:1516:11
    #6 0x8201fe5 in decode_frame /src/ffmpeg/libavcodec/bink.c:1264:20
    #7 0x821dd65 in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:285:15
    #8 0x821dd65 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:541:15
    #9 0x821dd65 in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:560:15
    #10 0x821d4d6 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:635:15
    #11 0x81f24fe in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:512:25
    #12 0x80b0c9e in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #13 0x809bbfe in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #14 0x80a1800 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #15 0x80cb3e7 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #16 0xf0bcfed4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aed4) (BuildId: f0e9c9950026d7f234a4a1d03670a7ed59ceb726)

DEDUP_TOKEN: posix_memalign--av_malloc--av_buffer_alloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:26:3 in __asan_memset
Shadow bytes around the buggy address:
  0x3d640720: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d640730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d640740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d640750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d640760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x3d640770:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d640780: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d640790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d6407a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d6407b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d6407c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING