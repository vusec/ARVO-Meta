INFO: Seed: 3271308765
INFO: Loaded 1 modules   (120788 inline 8-bit counters): 120788 [0x92532d0, 0x9270aa4),
INFO: Loaded 1 PC tables (120788 PCs): 120788 [0x9270aa4,0x935c944),
/out/coder_JPG_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xee403980 at pc 0x0824a0ab bp 0xffbeea48 sp 0xffbeea40
READ of size 1 at 0xee403980 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x824a0aa in GenerateEXIFAttribute /src/graphicsmagick/magick/attribute.c:2151:29
    #1 0x824602b in GetImageAttribute /src/graphicsmagick/magick/attribute.c:2409:11
    #2 0x8642753 in ReadJPEGImage /src/graphicsmagick/coders/jpeg.c:1691:19
    #3 0x82a089a in ReadImage /src/graphicsmagick/magick/constitute.c:1607:13
    #4 0x8252403 in BlobToImage /src/graphicsmagick/magick/blob.c:764:13
    #5 0x81ebb77 in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1591:5
    #6 0x81e4632 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:22:15
    #7 0x80e98b6 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:556:15
    #8 0x80d5d63 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:292:6
    #9 0x80db468 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:774:9
    #10 0x81002b7 in main /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #11 0xf48ef646 in __libc_start_main (/lib32/libc.so.6+0x18646)
    #12 0x80b0d84 in _start (/out/coder_JPG_fuzzer+0x80b0d84)

DEDUP_TOKEN: GenerateEXIFAttribute--GetImageAttribute--ReadJPEGImage
0xee403980 is located 0 bytes to the right of 256-byte region [0xee403880,0xee403980)
allocated by thread T0 here:
    #0 0x81af6f5 in malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x842e2d5 in AllocateString /src/graphicsmagick/magick/utility.c:202:15
    #2 0x8247a17 in GenerateEXIFAttribute /src/graphicsmagick/magick/attribute.c:1624:9
    #3 0x824602b in GetImageAttribute /src/graphicsmagick/magick/attribute.c:2409:11
    #4 0x8642753 in ReadJPEGImage /src/graphicsmagick/coders/jpeg.c:1691:19
    #5 0x82a089a in ReadImage /src/graphicsmagick/magick/constitute.c:1607:13
    #6 0x8252403 in BlobToImage /src/graphicsmagick/magick/blob.c:764:13
    #7 0x81ebb77 in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1591:5
    #8 0x81e4632 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:22:15
    #9 0x80e98b6 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:556:15
    #10 0x80d5d63 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:292:6
    #11 0x80db468 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:774:9
    #12 0x81002b7 in main /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #13 0xf48ef646 in __libc_start_main (/lib32/libc.so.6+0x18646)

DEDUP_TOKEN: malloc--AllocateString--GenerateEXIFAttribute
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/graphicsmagick/magick/attribute.c:2151:29 in GenerateEXIFAttribute
Shadow bytes around the buggy address:
  0x3dc806e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3dc806f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3dc80700: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3dc80710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3dc80720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x3dc80730:[fa]fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x3dc80740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3dc80750: 00 00 00 00 00 00 00 02 fa fa fa fa fa fa fa fa
  0x3dc80760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3dc80770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3dc80780: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING