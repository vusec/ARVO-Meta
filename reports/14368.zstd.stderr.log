INFO: Seed: 3273510016
INFO: Loaded 1 modules   (15933 inline 8-bit counters): 15933 [0x9c6440, 0x9ca27d),
INFO: Loaded 1 PC tables (15933 PCs): 15933 [0x721a08,0x75fdd8),
/out/stream_decompress: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6040000000fc at pc 0x00000068a1be bp 0x7ffc9b223590 sp 0x7ffc9b223588
READ of size 4 at 0x6040000000fc thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x68a1bd in MEM_read32 /src/zstd/tests/fuzz/../../lib/common/mem.h:171:14
    #1 0x68d404 in ZSTDv05_decodeSequence /src/zstd/tests/fuzz/../../lib/legacy/zstd_v05.c:3157:25
    #2 0x68c207 in ZSTDv05_decompressSequences /src/zstd/tests/fuzz/../../lib/legacy/zstd_v05.c:3344:13
    #3 0x688948 in ZSTDv05_decompressContinue /src/zstd/tests/fuzz/../../lib/legacy/zstd_v05.c:3625:25
    #4 0x6899b9 in ZBUFFv05_decompressContinue /src/zstd/tests/fuzz/../../lib/legacy/zstd_v05.c:3965:42
    #5 0x56c51f in ZSTD_decompressLegacyStream /src/zstd/tests/fuzz/../../lib/legacy/zstd_legacy.h:373:41
    #6 0x56b8c5 in ZSTD_decompressStream /src/zstd/tests/fuzz/../../lib/decompress/zstd_decompress.c:1547:49
    #7 0x6d99ad in LLVMFuzzerTestOneInput /src/zstd/tests/fuzz/stream_decompress.c:73:31
    #8 0x469604 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:529:15
    #9 0x457801 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:286:6
    #10 0x45c5ab in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:715:9
    #11 0x482e02 in main /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #12 0x7cc2e3ee083f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x41de28 in _start (/out/stream_decompress+0x41de28)

DEDUP_TOKEN: MEM_read32--ZSTDv05_decodeSequence--ZSTDv05_decompressSequences
0x6040000000fc is located 1 bytes to the right of 43-byte region [0x6040000000d0,0x6040000000fb)
allocated by thread T0 here:
    #0 0x52ef0d in malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:145:3
    #1 0x41fb47 in operator new(unsigned long) (/out/stream_decompress+0x41fb47)
    #2 0x457801 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:286:6
    #3 0x45c5ab in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:715:9
    #4 0x482e02 in main /src/llvm/projects/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #5 0x7cc2e3ee083f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/zstd/tests/fuzz/../../lib/common/mem.h:171:14 in MEM_read32
Shadow bytes around the buggy address:
  0x0c087fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff8000: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
=>0x0c087fff8010: fa fa 00 00 00 00 00 03 fa fa 00 00 00 00 00[03]
  0x0c087fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING