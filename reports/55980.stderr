INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2112068215
INFO: Loaded 1 modules   (52503 inline 8-bit counters): 52503 [0xae08b0, 0xaed5c7), 
INFO: Loaded 1 PC tables (52503 PCs): 52503 [0x969bb0,0xa36d20), 
/out/xml: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x621000009d00 at pc 0x0000005e4eb9 bp 0x7ffe52455390 sp 0x7ffe52455388
READ of size 1 at 0x621000009d00 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x5e4eb8 in xmlParseTryOrFinish /src/libxml2/parser.c:12080:25
    #1 0x5dd080 in xmlParseChunk /src/libxml2/parser.c
    #2 0x56c824 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/xml.c:77:5
    #3 0x43def3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #4 0x429652 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #5 0x42eefc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #6 0x458432 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #7 0x731950f05082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #8 0x41f81d in _start (/out/xml+0x41f81d)

DEDUP_TOKEN: xmlParseTryOrFinish--xmlParseChunk--LLVMFuzzerTestOneInput
0x621000009d00 is located 0 bytes to the right of 4096-byte region [0x621000008d00,0x621000009d00)
allocated by thread T0 here:
    #0 0x52f086 in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x56e35f in xmlBufCreate /src/libxml2/buf.c:138:32
    #2 0x603977 in xmlSwitchInputEncodingInt /src/libxml2/parserInternals.c:1114:22
    #3 0x603d6a in xmlSwitchToEncoding /src/libxml2/parserInternals.c:1183:12
    #4 0x5bf36c in xmlParseEncodingDecl /src/libxml2/parser.c:10515:7
    #5 0x5d69e9 in xmlParseXMLDecl /src/libxml2/parser.c:10691:5
    #6 0x5e310d in xmlParseTryOrFinish /src/libxml2/parser.c:11541:4
    #7 0x5dd080 in xmlParseChunk /src/libxml2/parser.c
    #8 0x56c7ca in LLVMFuzzerTestOneInput /src/libxml2/fuzz/xml.c:74:9
    #9 0x43def3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #10 0x429652 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #11 0x42eefc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #12 0x458432 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0x731950f05082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: __interceptor_malloc--xmlBufCreate--xmlSwitchInputEncodingInt
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libxml2/parser.c:12080:25 in xmlParseTryOrFinish
Shadow bytes around the buggy address:
  0x0c427fff9350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c427fff9360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c427fff9370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c427fff9380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c427fff9390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c427fff93a0:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fff93b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fff93c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fff93d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fff93e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fff93f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
