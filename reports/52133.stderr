=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60300000012d at pc 0x000000582a1d bp 0x7ffd2884add0 sp 0x7ffd2884adc8
READ of size 1 at 0x60300000012d thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x582a1c in ReadBlob /src/graphicsmagick/magick/blob.c:3365:25
    #1 0x586f09 in ReadBlobLSBLong /src/graphicsmagick/magick/blob.c:3693:7
    #2 0xa45165 in ReadTGAImage /src/graphicsmagick/coders/tga.c:324:34
    #3 0x5e96ef in ReadImage /src/graphicsmagick/magick/constitute.c:1630:13
    #4 0x57a6ac in BlobToImage /src/graphicsmagick/magick/blob.c:784:13
    #5 0x4ee105 in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1592:5
    #6 0x4de715 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:22:15
    #7 0x4dfb1a in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7
    #8 0x4df8ec in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:318:12
    #9 0x74cf0ce3a082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #10 0x41f59d in _start (/out/coder_ICB_fuzzer+0x41f59d)

DEDUP_TOKEN: ReadBlob--ReadBlobLSBLong--ReadTGAImage
0x60300000012d is located 3 bytes to the left of 23-byte region [0x603000000130,0x603000000147)
allocated by thread T0 here:
    #0 0x4db92d in operator new[](unsigned long) /src/llvm-project/compiler-rt/lib/asan/asan_new_delete.cpp:98:3
    #1 0x4e138e in Magick::BlobRef::BlobRef(void const*, unsigned long) /src/graphicsmagick/Magick++/lib/BlobRef.cpp:32:15
    #2 0x4dfc85 in Magick::Blob::Blob(void const*, unsigned long) /src/graphicsmagick/Magick++/lib/Blob.cpp:29:18
    #3 0x4de6e2 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:20:24
    #4 0x4dfb1a in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7

DEDUP_TOKEN: operator new[](unsigned long)--Magick::BlobRef::BlobRef(void const*, unsigned long)--Magick::Blob::Blob(void const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/graphicsmagick/magick/blob.c:3365:25 in ReadBlob
Shadow bytes around the buggy address:
  0x0c067fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff8000: fa fa fd fd fd fd fa fa 00 00 00 00 fa fa 00 00
  0x0c067fff8010: 00 00 fa fa 00 00 00 00 fa fa 00 00 05 fa fa fa
=>0x0c067fff8020: 00 00 00 00 fa[fa]00 00 07 fa fa fa fd fd fd fd
  0x0c067fff8030: fa fa 00 00 05 fa fa fa fd fd fd fd fa fa 00 00
  0x0c067fff8040: 05 fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
