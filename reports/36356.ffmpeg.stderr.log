INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3283087040
INFO: Loaded 1 modules   (55708 inline 8-bit counters): 55708 [0x1115020, 0x11229bc),
INFO: Loaded 1 PC tables (55708 PCs): 55708 [0xd1ab28,0xdf44e8),
/out/ffmpeg_AV_CODEC_ID_H264_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x62d00008088a at pc 0x000000724dc4 bp 0x7ffd03693780 sp 0x7ffd03693778
READ of size 4 at 0x62d00008088a thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x724dc3 in get_bits /src/ffmpeg/libavcodec/get_bits.h:404:5
    #1 0x7246ab in h264_parse_nal_header /src/ffmpeg/libavcodec/h2645_parse.c:320:20
    #2 0x72370d in ff_h2645_packet_split /src/ffmpeg/libavcodec/h2645_parse.c:510:19
    #3 0x792a39 in decode_extradata_ps /src/ffmpeg/libavcodec/h264_parse.c:370:11
    #4 0x791d73 in ff_h264_decode_extradata /src/ffmpeg/libavcodec/h264_parse.c:515:15
    #5 0x79346c in h264_parse /src/ffmpeg/libavcodec/h264_parser.c:581:13
    #6 0x5cfd18 in av_parser_parse2 /src/ffmpeg/libavcodec/parser.c:161:13
    #7 0x57ef63 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:352:27
    #8 0x480463 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #9 0x46bba2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #10 0x47187e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #11 0x49b362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x755ba43dc83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x446c78 in _start (/out/ffmpeg_AV_CODEC_ID_H264_fuzzer+0x446c78)

DEDUP_TOKEN: get_bits--h264_parse_nal_header--ff_h2645_packet_split
0x62d00008088a is located 2 bytes to the right of 33928-byte region [0x62d000078400,0x62d000080888)
allocated by thread T0 here:
    #0 0x549e07 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:226:3
    #1 0xb71ec5 in av_malloc /src/ffmpeg/libavutil/mem.c:87:9
    #2 0xb72d54 in av_memdup /src/ffmpeg/libavutil/mem.c:296:15
    #3 0x57ea01 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:318:36
    #4 0x480463 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #5 0x46bba2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #6 0x47187e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #7 0x49b362 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x755ba43dc83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: posix_memalign--av_malloc--av_memdup
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/get_bits.h:404:5 in get_bits
Shadow bytes around the buggy address:
  0x0c5a800080c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5a800080d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5a800080e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5a800080f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c5a80008100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c5a80008110: 00[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5a80008120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5a80008130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5a80008140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5a80008150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c5a80008160: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING