======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/coder_MVG_fuzzer < INPUT_FILE
or
  /out/coder_MVG_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/coder_MVG_fuzzer [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x603000000178 at pc 0x0000006d73d0 bp 0x7ffd7aea0d50 sp 0x7ffd7aea0d48
READ of size 8 at 0x603000000178 thread T0
SCARINESS: 23 (8-byte-read-heap-buffer-overflow)
    #0 0x6d73cf in DrawDashPolygon /src/graphicsmagick/magick/render.c:1948:11
    #1 0x6d2e6a in DrawPrimitive /src/graphicsmagick/magick/render.c:5579:19
    #2 0x6c45dc in DrawImage /src/graphicsmagick/magick/render.c:4373:13
    #3 0x7fcfc2 in ReadMVGImage /src/graphicsmagick/coders/mvg.c:224:10
    #4 0x5ca17d in ReadImage /src/graphicsmagick/magick/constitute.c:1607:13
    #5 0x583445 in BlobToImage /src/graphicsmagick/magick/blob.c:764:13
    #6 0x5371de in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1591:5
    #7 0x52ea83 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:20:15
    #8 0x52f3bf in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:301:5
    #9 0x52f96e in main /src/libfuzzer/afl/afl_driver.cpp:339:12
    #10 0x7db89dde383f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #11 0x41ddc8 in _start (/out/coder_MVG_fuzzer+0x41ddc8)

DEDUP_TOKEN: DrawDashPolygon--DrawPrimitive--DrawImage
0x603000000178 is located 0 bytes to the right of 24-byte region [0x603000000160,0x603000000178)
allocated by thread T0 here:
    #0 0x4ebc57 in malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:121
    #1 0x6b4387 in CloneDrawInfo /src/graphicsmagick/magick/render.c:325:9
    #2 0x6c01b6 in DrawImage /src/graphicsmagick/magick/render.c:3338:19
    #3 0x7fcfc2 in ReadMVGImage /src/graphicsmagick/coders/mvg.c:224:10
    #4 0x5ca17d in ReadImage /src/graphicsmagick/magick/constitute.c:1607:13
    #5 0x583445 in BlobToImage /src/graphicsmagick/magick/blob.c:764:13
    #6 0x5371de in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1591:5
    #7 0x52ea83 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:20:15
    #8 0x52f3bf in ExecuteFilesOnyByOne(int, char**) /src/libfuzzer/afl/afl_driver.cpp:301:5
    #9 0x52f96e in main /src/libfuzzer/afl/afl_driver.cpp:339:12
    #10 0x7db89dde383f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--CloneDrawInfo--DrawImage
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/graphicsmagick/magick/render.c:1948:11 in DrawDashPolygon
Shadow bytes around the buggy address:
  0x0c067fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c067fff8000: fa fa fd fd fd fd fa fa 00 00 00 00 fa fa 00 00
  0x0c067fff8010: 00 00 fa fa 00 00 00 00 fa fa 00 00 00 00 fa fa
=>0x0c067fff8020: fd fd fd fd fa fa 00 00 00 00 fa fa 00 00 00[fa]
  0x0c067fff8030: fa fa fd fd fd fa fa fa fd fd fd fa fa fa 00 00
  0x0c067fff8040: 00 fa fa fa fd fd fd fa fa fa fa fa fa fa fa fa
  0x0c067fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c067fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==7==ABORTING
