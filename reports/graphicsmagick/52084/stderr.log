INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1621973851
INFO: Loaded 1 modules   (165088 inline 8-bit counters): 165088 [0x1910b00, 0x1938fe0), 
INFO: Loaded 1 PC tables (165088 PCs): 165088 [0x1938fe0,0x1bbdde0), 
/out/coder_VDA_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000218 at pc 0x000000980a3e bp 0x7ffd7e770d30 sp 0x7ffd7e770d28
READ of size 2 at 0x602000000218 thread T0
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x980a3d in ReadTGAImage /src/graphicsmagick/coders/tga.c:548:33
    #1 0x63b887 in ReadImage /src/graphicsmagick/magick/constitute.c:1630:13
    #2 0x5ec18b in BlobToImage /src/graphicsmagick/magick/blob.c:784:13
    #3 0x578c8c in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1592:5
    #4 0x56e8e8 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:22:15
    #5 0x43fc53 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #6 0x42b3b2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #7 0x430c5c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #8 0x45a192 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #9 0x706c22f6e082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #10 0x42157d in _start (/out/coder_VDA_fuzzer+0x42157d)

DEDUP_TOKEN: ReadTGAImage--ReadImage--BlobToImage
0x602000000218 is located 0 bytes to the right of 8-byte region [0x602000000210,0x602000000218)
allocated by thread T0 here:
    #0 0x530de6 in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x70b93a in MagickMalloc /src/graphicsmagick/magick/memory.c:175:10
    #2 0x610319 in AllocateImageColormap /src/graphicsmagick/magick/colormap.c:76:21
    #3 0x97d569 in ReadTGAImage /src/graphicsmagick/coders/tga.c:401:16
    #4 0x63b887 in ReadImage /src/graphicsmagick/magick/constitute.c:1630:13
    #5 0x5ec18b in BlobToImage /src/graphicsmagick/magick/blob.c:784:13
    #6 0x578c8c in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1592:5
    #7 0x56e8e8 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:22:15
    #8 0x43fc53 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #9 0x42b3b2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #10 0x430c5c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #11 0x45a192 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x706c22f6e082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: __interceptor_malloc--MagickMalloc--AllocateImageColormap
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/graphicsmagick/coders/tga.c:548:33 in ReadTGAImage
Shadow bytes around the buggy address:
  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff8000: fa fa fd fa fa fa fd fa fa fa 00 00 fa fa 00 fa
  0x0c047fff8010: fa fa 00 fa fa fa 00 fa fa fa 00 00 fa fa 00 00
  0x0c047fff8020: fa fa 00 00 fa fa 00 fa fa fa 03 fa fa fa 03 fa
  0x0c047fff8030: fa fa 03 fa fa fa 00 00 fa fa 00 00 fa fa 00 fa
=>0x0c047fff8040: fa fa 00[fa]fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
