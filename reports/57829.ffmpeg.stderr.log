INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3298868285
INFO: Loaded 1 modules   (57553 inline 8-bit counters): 57553 [0xee8170, 0xef6241),
INFO: Loaded 1 PC tables (57553 PCs): 57553 [0xcfc200,0xddcf10),
/out/ffmpeg_AV_CODEC_ID_MPEG2VIDEO_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x631000010800 at pc 0x00000086b29b bp 0x7fff67658da0 sp 0x7fff67658d98
READ of size 1 at 0x631000010800 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x86b29a in ff_add_pixels_clamped_c /src/ffmpeg/libavcodec/idctdsp.c:154:35
    #1 0x893e2f in ff_jref_idct_add /src/ffmpeg/libavcodec/jrevdct.c:1171:5
    #2 0x60c0b0 in add_dct /src/ffmpeg/libavcodec/mpegvideo_dec.c:999:9
    #3 0x60c0b0 in mpv_reconstruct_mb_internal /src/ffmpeg/libavcodec/mpv_reconstruct_mb_template.c:203:17
    #4 0x60c0b0 in ff_mpv_reconstruct_mb /src/ffmpeg/libavcodec/mpegvideo_dec.c:1023:13
    #5 0x5fc1d5 in mpeg_er_decode_mb /src/ffmpeg/libavcodec/mpeg_er.c:99:5
    #6 0x7a0ad2 in ff_er_frame_end /src/ffmpeg/libavcodec/error_resilience.c:1226:17
    #7 0x5de6d0 in slice_end /src/ffmpeg/libavcodec/mpeg12dec.c:2027:9
    #8 0x5de6d0 in decode_chunks /src/ffmpeg/libavcodec/mpeg12dec.c:2464:23
    #9 0x5dad11 in mpeg_decode_frame /src/ffmpeg/libavcodec/mpeg12dec.c:2813:11
    #10 0x5a2e4d in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:287:15
    #11 0x5a2e4d in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:540:15
    #12 0x5a2e4d in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:560:15
    #13 0x5a2672 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:635:15
    #14 0x58e80f in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:513:25
    #15 0x45dc53 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #16 0x4493b2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #17 0x44ec5c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #18 0x478192 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #19 0x70f28f3f6082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #20 0x43f57d in _start (/out/ffmpeg_AV_CODEC_ID_MPEG2VIDEO_fuzzer+0x43f57d)

DEDUP_TOKEN: ff_add_pixels_clamped_c--ff_jref_idct_add--add_dct
0x631000010800 is located 0 bytes to the right of 65536-byte region [0x631000000800,0x631000010800)
allocated by thread T0 here:
    #0 0x54f937 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0xb3aa4e in av_malloc /src/ffmpeg/libavutil/mem.c:105:9
    #2 0xaf7dc1 in av_buffer_alloc /src/ffmpeg/libavutil/buffer.c:82:12
    #3 0x590ae0 in fuzz_video_get_buffer /src/ffmpeg/tools/target_dec_fuzzer.c:131:25
    #4 0x590ae0 in fuzz_get_buffer2 /src/ffmpeg/tools/target_dec_fuzzer.c:152:18
    #5 0x5abf19 in ff_get_buffer /src/ffmpeg/libavcodec/decode.c:1545:11
    #6 0x62d54c in ff_thread_get_ext_buffer /src/ffmpeg/libavcodec/pthread_frame.c:947:16
    #7 0x8e9463 in alloc_frame_buffer /src/ffmpeg/libavcodec/mpegpicture.c:145:13
    #8 0x8e9463 in ff_alloc_picture /src/ffmpeg/libavcodec/mpegpicture.c:272:13
    #9 0x603ede in alloc_picture /src/ffmpeg/libavcodec/mpegvideo_dec.c:245:12
    #10 0x603ede in ff_mpv_frame_start /src/ffmpeg/libavcodec/mpegvideo_dec.c:329:9
    #11 0x5ec23f in mpeg_field_start /src/ffmpeg/libavcodec/mpeg12dec.c:1580:20
    #12 0x5e522c in decode_chunks /src/ffmpeg/libavcodec/mpeg12dec.c:2712:32
    #13 0x5dad11 in mpeg_decode_frame /src/ffmpeg/libavcodec/mpeg12dec.c:2813:11
    #14 0x5a2e4d in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:287:15
    #15 0x5a2e4d in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:540:15
    #16 0x5a2e4d in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:560:15
    #17 0x5a2672 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:635:15
    #18 0x58e80f in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:513:25
    #19 0x45dc53 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #20 0x4493b2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #21 0x44ec5c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #22 0x478192 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #23 0x70f28f3f6082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: posix_memalign--av_malloc--av_buffer_alloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/idctdsp.c:154:35 in ff_add_pixels_clamped_c
Shadow bytes around the buggy address:
  0x0c627fffa0b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c627fffa0c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c627fffa0d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c627fffa0e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c627fffa0f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c627fffa100:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c627fffa110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c627fffa120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c627fffa130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c627fffa140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c627fffa150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING