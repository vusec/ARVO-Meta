======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/ffmpeg_AV_CODEC_ID_HCOM_fuzzer < INPUT_FILE
or
  /out/ffmpeg_AV_CODEC_ID_HCOM_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/ffmpeg_AV_CODEC_ID_HCOM_fuzzer [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x609000000194 at pc 0x0000004e08e7 bp 0x7fffdd4b4370 sp 0x7fffdd4b4368
READ of size 2 at 0x609000000194 thread T0
SCARINESS: 24 (2-byte-read-heap-buffer-overflow-far-from-bounds)
    #0 0x4e08e6 in hcom_decode /src/ffmpeg/libavcodec/hcom.c:102:36
    #1 0x4dcb65 in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:432:15
    #2 0x4dc811 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:628:15
    #3 0x4d28fd in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:646:15
    #4 0x4d2707 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:704:15
    #5 0x4d3a4e in compat_decode /src/ffmpeg/libavcodec/decode.c:840:15
    #6 0x4c9e99 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:259:23
    #7 0x927e4e in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:216:5
    #8 0x927e4e in main /src/libfuzzer/afl/afl_driver.cpp:253:12
    #9 0x7db40aaa483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #10 0x41e898 in _start (/out/ffmpeg_AV_CODEC_ID_HCOM_fuzzer+0x41e898)

DEDUP_TOKEN: hcom_decode--decode_simple_internal--decode_simple_receive_frame
0x609000000194 is located 68 bytes to the right of 16-byte region [0x609000000140,0x609000000150)
allocated by thread T0 here:
    #0 0x497777 in posix_memalign /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cpp:226:3
    #1 0x8d038b in av_malloc /src/ffmpeg/libavutil/mem.c:87:9
    #2 0x8d0a2b in av_mallocz /src/ffmpeg/libavutil/mem.c:238:17
    #3 0x508ffd in av_bsf_alloc /src/ffmpeg/libavcodec/bsf.c:101:21
    #4 0x4d0ac2 in ff_decode_bsfs_init /src/ffmpeg/libavcodec/decode.c:232:15
    #5 0x4f394f in avcodec_open2 /src/ffmpeg/libavcodec/utils.c:736:15
    #6 0x4c962c in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:192:15
    #7 0x927e4e in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:216:5
    #8 0x927e4e in main /src/libfuzzer/afl/afl_driver.cpp:253:12
    #9 0x7db40aaa483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: posix_memalign--av_malloc--av_mallocz
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/hcom.c:102:36 in hcom_decode
Shadow bytes around the buggy address:
  0x0c127fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c127fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c127fff8000: fa fa fa fa fa fa fa fa 00 00 00 00 fa fa fa fa
  0x0c127fff8010: fa fa fa fa fa fa fa fa fd fa fa fa fa fa fa fa
  0x0c127fff8020: fa fa fa fa fa fa fa fa 00 00 fa fa fa fa fa fa
=>0x0c127fff8030: fa fa[fa]fa fa fa fa fa 00 00 00 00 00 fa fa fa
  0x0c127fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c127fff8050: 00 00 00 00 00 fa fa fa fa fa fa fa fa fa fa fa
  0x0c127fff8060: 00 00 00 fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c127fff8070: 00 00 00 fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c127fff8080: 00 00 00 00 00 fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==7==ABORTING
