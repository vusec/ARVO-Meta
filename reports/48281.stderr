=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61d000000880 at pc 0x0000009225f7 bp 0x7ffc3b78f820 sp 0x7ffc3b78f818
WRITE of size 1 at 0x61d000000880 thread T0
SCARINESS: 31 (1-byte-write-heap-buffer-overflow)
    #0 0x9225f6 in idctSparseColPut_int16_8bit /src/ffmpeg/libavcodec/simple_idct_template.c:285:13
    #1 0x9225f6 in ff_simple_idct_put_int16_8bit /src/ffmpeg/libavcodec/simple_idct_template.c:342:9
    #2 0x574bde in decode_dct_block /src/ffmpeg/libavcodec/speedhq.c:276:5
    #3 0x573511 in decode_speedhq_border /src/ffmpeg/libavcodec/speedhq.c:318:20
    #4 0x573511 in decode_speedhq_field /src/ffmpeg/libavcodec/speedhq.c:481:16
    #5 0x571427 in speedhq_decode_frame /src/ffmpeg/libavcodec/speedhq.c
    #6 0x51a9ca in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:307:15
    #7 0x51a9ca in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:515:15
    #8 0x51a9ca in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:536:15
    #9 0x519fb7 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:604:15
    #10 0x500a25 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:482:25
    #11 0xdb35aa in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7
    #12 0xdb337d in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:318:12
    #13 0x7accb9b02082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #14 0x444b9d in _start (/out/ffmpeg_AV_CODEC_ID_SPEEDHQ_fuzzer+0x444b9d)

DEDUP_TOKEN: idctSparseColPut_int16_8bit--ff_simple_idct_put_int16_8bit--decode_dct_block
0x61d000000880 is located 0 bytes to the right of 2048-byte region [0x61d000000080,0x61d000000880)
allocated by thread T0 here:
    #0 0x4c48c7 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:210:3
    #1 0xd06f2c in av_malloc /src/ffmpeg/libavutil/mem.c:105:9
    #2 0xcba9d9 in av_buffer_alloc /src/ffmpeg/libavutil/buffer.c:82:12
    #3 0x50320c in fuzz_video_get_buffer /src/ffmpeg/tools/target_dec_fuzzer.c:131:25
    #4 0x50320c in fuzz_get_buffer2 /src/ffmpeg/tools/target_dec_fuzzer.c:152:18
    #5 0x5259e4 in ff_get_buffer /src/ffmpeg/libavcodec/decode.c:1458:11
    #6 0x571302 in speedhq_decode_frame /src/ffmpeg/libavcodec/speedhq.c:520:16
    #7 0x51a9ca in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:307:15
    #8 0x51a9ca in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:515:15
    #9 0x51a9ca in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:536:15
    #10 0x519fb7 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:604:15
    #11 0x500a25 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:482:25
    #12 0xdb35aa in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7

DEDUP_TOKEN: posix_memalign--av_malloc--av_buffer_alloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/simple_idct_template.c:285:13 in idctSparseColPut_int16_8bit
Shadow bytes around the buggy address:
  0x0c3a7fff80c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3a7fff80d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3a7fff80e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3a7fff80f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c3a7fff8100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c3a7fff8110:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3a7fff8120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3a7fff8130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3a7fff8140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3a7fff8150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c3a7fff8160: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
