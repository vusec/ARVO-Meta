INFO: Seed: 1815525172
INFO: Loaded 1 modules (148483 guards): [0x12dffb0, 0x1370fbc), 
/out/ffmpeg_AV_CODEC_ID_WEBP_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x616000003ec0 at pc 0x0000007c91f2 bp 0x7ffd73f3e2f0 sp 0x7ffd73f3e2e8
WRITE of size 4 at 0x616000003ec0 thread T0
SCARINESS: 46 (4-byte-write-heap-buffer-overflow-far-from-bounds)
    #0 0x7c91f1 in intra_predict /src/ffmpeg/libavcodec/vp8.c:1677:21
    #1 0x7c91f1 in decode_mb_row_no_filter /src/ffmpeg/libavcodec/vp8.c:2364
    #2 0x7c91f1 in vp8_decode_mb_row_no_filter /src/ffmpeg/libavcodec/vp8.c:2422
    #3 0x6e457e in vp78_decode_mb_row_sliced /src/ffmpeg/libavcodec/vp8.c:2512:15
    #4 0x6e457e in vp8_decode_mb_row_sliced /src/ffmpeg/libavcodec/vp8.c:2540
    #5 0x577060 in avcodec_default_execute2 /src/ffmpeg/libavcodec/utils.c:553:17
    #6 0x671012 in vp78_decode_frame /src/ffmpeg/libavcodec/vp8.c:2679:9
    #7 0x671012 in ff_vp8_decode_frame /src/ffmpeg/libavcodec/vp8.c:2706
    #8 0x5a6911 in vp8_lossy_decode_frame /src/ffmpeg/libavcodec/webp.c:1344:11
    #9 0x5a47db in webp_decode_frame /src/ffmpeg/libavcodec/webp.c:1404:23
    #10 0x54756f in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:414:15
    #11 0x546b65 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:617:15
    #12 0x52ee9f in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:635:15
    #13 0x52c6bf in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:675:15
    #14 0x53070f in compat_decode /src/ffmpeg/libavcodec/decode.c:730:15
    #15 0x5194b2 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:213:23
    #16 0xc62f29 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:440:13
    #17 0xc636fa in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:397:3
    #18 0xc3aa56 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:268:6
    #19 0xc45ef6 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:682:9
    #20 0xc3a078 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #21 0x7193775e183f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #22 0x41d658 in _start (/out/ffmpeg_AV_CODEC_ID_WEBP_fuzzer+0x41d658)

DEDUP_TOKEN: intra_predict--decode_mb_row_no_filter--vp8_decode_mb_row_no_filter
0x616000003ec0 is located 17 bytes to the right of 559-byte region [0x616000003c80,0x616000003eaf)
allocated by thread T0 here:
    #0 0x4dcdc0 in __interceptor_posix_memalign /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:142
    #1 0xbb7974 in av_malloc /src/ffmpeg/libavutil/mem.c:87:9
    #2 0xb57749 in av_buffer_alloc /src/ffmpeg/libavutil/buffer.c:72:12
    #3 0xb5782e in av_buffer_allocz /src/ffmpeg/libavutil/buffer.c:85:24
    #4 0xb5c1d7 in pool_alloc_buffer /src/ffmpeg/libavutil/buffer.c:313:26
    #5 0xb5b7c6 in av_buffer_pool_get /src/ffmpeg/libavutil/buffer.c:349:15
    #6 0x53c648 in video_get_buffer /src/ffmpeg/libavcodec/decode.c:1378:23
    #7 0x542d67 in get_buffer_internal /src/ffmpeg/libavcodec/decode.c:1604:11
    #8 0x542419 in ff_get_buffer /src/ffmpeg/libavcodec/decode.c:1619:15
    #9 0x56ccda in ff_thread_get_buffer /src/ffmpeg/libavcodec/pthread_frame.c:967:15
    #10 0x6926fc in vp8_alloc_frame /src/ffmpeg/libavcodec/vp8.c:72:16
    #11 0x66f9e4 in vp78_decode_frame /src/ffmpeg/libavcodec/vp8.c:2611:16
    #12 0x66f9e4 in ff_vp8_decode_frame /src/ffmpeg/libavcodec/vp8.c:2706
    #13 0x5a6911 in vp8_lossy_decode_frame /src/ffmpeg/libavcodec/webp.c:1344:11
    #14 0x5a47db in webp_decode_frame /src/ffmpeg/libavcodec/webp.c:1404:23
    #15 0x54756f in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:414:15
    #16 0x546b65 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:617:15
    #17 0x52ee9f in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:635:15
    #18 0x52c6bf in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:675:15
    #19 0x53070f in compat_decode /src/ffmpeg/libavcodec/decode.c:730:15
    #20 0x5194b2 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:213:23
    #21 0xc62f29 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:440:13
    #22 0xc636fa in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:397:3
    #23 0xc3aa56 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:268:6
    #24 0xc45ef6 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:682:9
    #25 0xc3a078 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #26 0x7193775e183f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: __interceptor_posix_memalign--av_malloc--av_buffer_alloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/vp8.c:1677:21 in intra_predict
Shadow bytes around the buggy address:
  0x0c2c7fff8780: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fff8790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff87a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff87b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2c7fff87c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c2c7fff87d0: 00 00 00 00 00 07 fa fa[fa]fa fa fa fa fa fa fa
  0x0c2c7fff87e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fff87f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fff8800: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fff8810: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fff8820: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
