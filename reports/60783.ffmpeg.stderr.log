INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 309209258
INFO: Loaded 1 modules   (105421 inline 8-bit counters): 105421 [0x11c1580, 0x11db14d),
INFO: Loaded 1 PC tables (105421 PCs): 105421 [0xead330,0x1049000),
/out/ffmpeg_dem_FLV_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6100000003b7 at pc 0x000000651faf bp 0x7ffeacca12b0 sp 0x7ffeacca12a8
READ of size 1 at 0x6100000003b7 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x651fae in flv_same_video_codec /src/ffmpeg/libavformat/flvdec.c:317:29
    #1 0x651fae in flv_read_packet /src/ffmpeg/libavformat/flvdec.c:1179:39
    #2 0x60967f in ff_read_packet /src/ffmpeg/libavformat/demux.c:575:15
    #3 0x60d58b in read_frame_internal /src/ffmpeg/libavformat/demux.c:1263:15
    #4 0x614861 in avformat_find_stream_info /src/ffmpeg/libavformat/demux.c:2634:15
    #5 0x5781c5 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dem_fuzzer.c:206:11
    #6 0x4492f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #7 0x434a52 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #8 0x43a2fc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #9 0x463832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #10 0x78c30e6c7082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #11 0x42ac1d in _start (/out/ffmpeg_dem_FLV_fuzzer+0x42ac1d)

DEDUP_TOKEN: flv_same_video_codec--flv_read_packet--ff_read_packet
0x6100000003b7 is located 0 bytes to the right of 119-byte region [0x610000000340,0x6100000003b7)
allocated by thread T0 here:
    #0 0x53afd7 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x9bf58e in av_malloc /src/ffmpeg/libavutil/mem.c:105:9
    #2 0x57804a in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dem_fuzzer.c:186:17
    #3 0x4492f3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #4 0x434a52 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #5 0x43a2fc in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #6 0x463832 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #7 0x78c30e6c7082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: posix_memalign--av_malloc--LLVMFuzzerTestOneInput
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavformat/flvdec.c:317:29 in flv_same_video_codec
Shadow bytes around the buggy address:
  0x0c207fff8020: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c207fff8030: 00 00 00 00 00 fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8040: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c207fff8050: 00 00 00 00 00 fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff8060: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
=>0x0c207fff8070: 00 00 00 00 00 00[07]fa fa fa fa fa fa fa fa fa
  0x0c207fff8080: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c207fff8090: 00 00 00 00 00 fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c207fff80c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING