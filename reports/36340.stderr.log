Accepting input from '/tmp/poc'
Usage for fuzzing: honggfuzz -P [flags] -- /out/ffmpeg_AV_CODEC_ID_MPEG4_fuzzer
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6090000001c3 at pc 0x0000005336c0 bp 0x7ffdac195f30 sp 0x7ffdac195f28
READ of size 4 at 0x6090000001c3 thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x5336bf in get_bits /src/ffmpeg/libavcodec/get_bits.h:404:5
    #1 0x53d098 in ff_mpeg4_decode_picture_header /src/ffmpeg/libavcodec/mpeg4videodec.c:3257:13
    #2 0x7c85fa in mpeg4_decode_header /src/ffmpeg/libavcodec/mpeg4video_parser.c:92:15
    #3 0x7c8224 in mpeg4video_parse /src/ffmpeg/libavcodec/mpeg4video_parser.c:149:5
    #4 0x5836c6 in av_parser_parse2 /src/ffmpeg/libavcodec/parser.c:161:13
    #5 0x4ed553 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:352:27
    #6 0x9df06b in main (/out/ffmpeg_AV_CODEC_ID_MPEG4_fuzzer+0x9df06b)
    #7 0x7f44dfcf883f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #8 0x43cd68 in _start (/out/ffmpeg_AV_CODEC_ID_MPEG4_fuzzer+0x43cd68)

DEDUP_TOKEN: get_bits--ff_mpeg4_decode_picture_header--mpeg4_decode_header
0x6090000001c3 is located 1 bytes to the right of 2-byte region [0x6090000001c0,0x6090000001c2)
allocated by thread T0 here:
    #0 0x4b8317 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:226:3
    #1 0x98102b in av_malloc /src/ffmpeg/libavutil/mem.c:87:9
    #2 0x981e66 in av_memdup /src/ffmpeg/libavutil/mem.c:296:15
    #3 0x4ed013 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:318:36
    #4 0x9df06b in main (/out/ffmpeg_AV_CODEC_ID_MPEG4_fuzzer+0x9df06b)

DEDUP_TOKEN: posix_memalign--av_malloc--av_memdup
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/get_bits.h:404:5 in get_bits
Shadow bytes around the buggy address:
  0x0c127fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c127fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c127fff8000: fa fa fa fa fa fa fa fa 00 00 00 00 00 fa fa fa
  0x0c127fff8010: fa fa fa fa fa fa fa fa 00 00 00 00 fa fa fa fa
  0x0c127fff8020: fa fa fa fa fa fa fa fa 00 00 fa fa fa fa fa fa
=>0x0c127fff8030: fa fa fa fa fa fa fa fa[02]fa fa fa fa fa fa fa
  0x0c127fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c127fff8050: 00 00 00 00 00 00 fa fa fa fa fa fa fa fa fa fa
  0x0c127fff8060: 00 00 00 fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c127fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c127fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==7==ABORTING
