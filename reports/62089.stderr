Accepting input from '/tmp/poc'
Usage for fuzzing: honggfuzz -P [flags] -- /out/ffmpeg_DEMUXER_fuzzer
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7f41c9f4c804 at pc 0x000000d6496c bp 0x7ffc1a8c0630 sp 0x7ffc1a8c0628
READ of size 4 at 0x7f41c9f4c804 thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0xd6496b in read_vlc_prefix /src/ffmpeg/libavcodec/jpegxl_parser.c:784:30
    #1 0xd6496b in read_distribution_bundle /src/ffmpeg/libavcodec/jpegxl_parser.c:862:19
    #2 0xd5c2f2 in entropy_decoder_init /src/ffmpeg/libavcodec/jpegxl_parser.c:902:11
    #3 0xd55dd8 in parse_frame_header /src/ffmpeg/libavcodec/jpegxl_parser.c:1261:15
    #4 0xd55dd8 in try_parse /src/ffmpeg/libavcodec/jpegxl_parser.c:1402:15
    #5 0xd55dd8 in jpegxl_parse /src/ffmpeg/libavcodec/jpegxl_parser.c:1428:15
    #6 0x8c1c51 in av_parser_parse2 /src/ffmpeg/libavcodec/parser.c:163:13
    #7 0x5328d9 in parse_packet /src/ffmpeg/libavformat/demux.c:1154:15
    #8 0x521e57 in read_frame_internal /src/ffmpeg/libavformat/demux.c:1355:24
    #9 0x527d2d in avformat_find_stream_info /src/ffmpeg/libavformat/demux.c:2635:15
    #10 0x5095bc in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dem_fuzzer.c:206:11
    #11 0x1373a0b in main (/out/ffmpeg_DEMUXER_fuzzer+0x1373a0b)
    #12 0x7f41ca655082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #13 0x44a9cd in _start (/out/ffmpeg_DEMUXER_fuzzer+0x44a9cd)

DEDUP_TOKEN: read_vlc_prefix--read_distribution_bundle--entropy_decoder_init
0x7f41c9f4c804 is located 0 bytes to the right of 262148-byte region [0x7f41c9f0c800,0x7f41c9f4c804)
allocated by thread T0 here:
    #0 0x4cc957 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0xfdb706 in av_malloc /src/ffmpeg/libavutil/mem.c:105:9
    #2 0xfdb706 in av_mallocz /src/ffmpeg/libavutil/mem.c:256:17
    #3 0xfdb706 in av_calloc /src/ffmpeg/libavutil/mem.c:267:12
    #4 0xd61b0a in read_vlc_prefix /src/ffmpeg/libavcodec/jpegxl_parser.c:732:11
    #5 0xd61b0a in read_distribution_bundle /src/ffmpeg/libavcodec/jpegxl_parser.c:862:19
    #6 0xd5c2f2 in entropy_decoder_init /src/ffmpeg/libavcodec/jpegxl_parser.c:902:11
    #7 0xd55dd8 in parse_frame_header /src/ffmpeg/libavcodec/jpegxl_parser.c:1261:15
    #8 0xd55dd8 in try_parse /src/ffmpeg/libavcodec/jpegxl_parser.c:1402:15
    #9 0xd55dd8 in jpegxl_parse /src/ffmpeg/libavcodec/jpegxl_parser.c:1428:15
    #10 0x8c1c51 in av_parser_parse2 /src/ffmpeg/libavcodec/parser.c:163:13
    #11 0x5328d9 in parse_packet /src/ffmpeg/libavformat/demux.c:1154:15
    #12 0x521e57 in read_frame_internal /src/ffmpeg/libavformat/demux.c:1355:24
    #13 0x527d2d in avformat_find_stream_info /src/ffmpeg/libavformat/demux.c:2635:15
    #14 0x5095bc in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dem_fuzzer.c:206:11
    #15 0x1373a0b in main (/out/ffmpeg_DEMUXER_fuzzer+0x1373a0b)

DEDUP_TOKEN: posix_memalign--av_malloc--av_mallocz
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/jpegxl_parser.c:784:30 in read_vlc_prefix
Shadow bytes around the buggy address:
  0x0fe8b93e18b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fe8b93e18c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fe8b93e18d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fe8b93e18e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fe8b93e18f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0fe8b93e1900:[04]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0fe8b93e1910: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0fe8b93e1920: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0fe8b93e1930: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0fe8b93e1940: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0fe8b93e1950: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
