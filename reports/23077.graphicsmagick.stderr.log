INFO: Seed: 3274830920
INFO: Loaded 1 modules   (121254 inline 8-bit counters): 121254 [0x925f820, 0x927d1c6),
INFO: Loaded 1 PC tables (121254 PCs): 121254 [0x927d1c8,0x9369ef8),
/out/coder_WPG_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xee403d58 at pc 0x086241ee bp 0xffbb2da8 sp 0xffbb2da0
WRITE of size 2 at 0xee403d58 thread T0
SCARINESS: 33 (2-byte-write-heap-buffer-overflow)
    #0 0x86241ed in InsertRow /src/graphicsmagick/coders/wpg.c:328:25
    #1 0x8625d79 in ZeroFillMissingData /src/graphicsmagick/coders/wpg.c:422:9
    #2 0x8622452 in UnpackWPGRaster /src/graphicsmagick/coders/wpg.c:526:19
    #3 0x861bbd7 in ReadWPGImage /src/graphicsmagick/coders/wpg.c:1382:20
    #4 0x82a1a0a in ReadImage /src/graphicsmagick/magick/constitute.c:1607:13
    #5 0x82535e3 in BlobToImage /src/graphicsmagick/magick/blob.c:764:13
    #6 0x81ec8f7 in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1591:5
    #7 0x81e5425 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:22:15
    #8 0x80e9a96 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:556:15
    #9 0x80d5f43 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:292:6
    #10 0x80db648 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:774:9
    #11 0x8100457 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #12 0xf1b27646 in __libc_start_main (/lib32/libc.so.6+0x18646)
    #13 0x80b0f14 in _start (/out/coder_WPG_fuzzer+0x80b0f14)

DEDUP_TOKEN: InsertRow--ZeroFillMissingData--UnpackWPGRaster
0xee403d58 is located 0 bytes to the right of 280-byte region [0xee403c40,0xee403d58)
allocated by thread T0 here:
    #0 0x81b00b5 in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x837ea8b in MagickRealloc /src/graphicsmagick/magick/memory.c
    #2 0x839a92d in OpenCache /src/graphicsmagick/magick/pixel_cache.c:2497:7
    #3 0x8399b64 in ModifyCache /src/graphicsmagick/magick/pixel_cache.c:4586:18
    #4 0x839ebf9 in SetCacheNexus /src/graphicsmagick/magick/pixel_cache.c:922:7
    #5 0x839ea05 in SetCacheViewPixels /src/graphicsmagick/magick/pixel_cache.c:4883:10
    #6 0x839ee1b in SetImagePixelsEx /src/graphicsmagick/magick/pixel_cache.c:4995:10
    #7 0x8608ba1 in ReadVICARImage /src/graphicsmagick/coders/vicar.c:285:10
    #8 0x82a1a0a in ReadImage /src/graphicsmagick/magick/constitute.c:1607:13
    #9 0x82535e3 in BlobToImage /src/graphicsmagick/magick/blob.c:764:13
    #10 0x8620e30 in ExtractPostscript /src/graphicsmagick/coders/wpg.c:945:12
    #11 0x861b43a in ReadWPGImage /src/graphicsmagick/coders/wpg.c:1449:23
    #12 0x82a1a0a in ReadImage /src/graphicsmagick/magick/constitute.c:1607:13
    #13 0x82535e3 in BlobToImage /src/graphicsmagick/magick/blob.c:764:13
    #14 0x81ec8f7 in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1591:5
    #15 0x81e5425 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:22:15
    #16 0x80e9a96 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:556:15
    #17 0x80d5f43 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:292:6
    #18 0x80db648 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:774:9
    #19 0x8100457 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #20 0xf1b27646 in __libc_start_main (/lib32/libc.so.6+0x18646)

DEDUP_TOKEN: malloc--MagickRealloc--OpenCache
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/graphicsmagick/coders/wpg.c:328:25 in InsertRow
Shadow bytes around the buggy address:
  0x3dc80750: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3dc80760: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3dc80770: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3dc80780: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x3dc80790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x3dc807a0: 00 00 00 00 00 00 00 00 00 00 00[fa]fa fa fa fa
  0x3dc807b0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x3dc807c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3dc807d0: 00 00 00 00 00 00 00 00 00 00 00 00 fa fa fa fa
  0x3dc807e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3dc807f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING