INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 71060741
INFO: Loaded 1 modules   (30979 inline 8-bit counters): 30979 [0x101ee70, 0x1026773),
INFO: Loaded 1 PC tables (30979 PCs): 30979 [0x1026778,0x109f7a8),
/out/av1_dec_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x604000000138 at pc 0x00000084d278 bp 0x7ffc04d5c520 sp 0x7ffc04d5c518
READ of size 8 at 0x604000000138 thread T0
SCARINESS: 23 (8-byte-read-heap-buffer-overflow)
    #0 0x84d277 in av1_free_cdef_buffers /src/aom/av1/common/alloccommon.c:92:53
    #1 0x5593b4 in decoder_destroy /src/aom/av1/av1_dx_iface.c:123:5
    #2 0x557967 in aom_codec_destroy /src/aom/aom/src/aom_codec.c:75:3
    #3 0x55720a in LLVMFuzzerTestOneInput /src/aom/examples/av1_dec_fuzzer.cc:65:3
    #4 0x459e53 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #5 0x443c62 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #6 0x449aaa in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #7 0x475792 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7ec7e0fc483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #9 0x41e948 in _start (/out/av1_dec_fuzzer+0x41e948)

DEDUP_TOKEN: av1_free_cdef_buffers--decoder_destroy--aom_codec_destroy
0x60400000013f is located 0 bytes to the right of 47-byte region [0x604000000110,0x60400000013f)
allocated by thread T0 here:
    #0 0x52378d in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x841d1b in aom_memalign /src/aom/aom_mem/aom_mem.c:55:22
    #2 0x841d1b in aom_malloc /src/aom/aom_mem/aom_mem.c:63:40
    #3 0x84e188 in av1_alloc_cdef_buffers /src/aom/av1/common/alloccommon.c:199:5
    #4 0x58a2f6 in av1_decode_tg_tiles_and_wrapup /src/aom/av1/decoder/decodeframe.c:5284:3
    #5 0x5f768f in read_one_tile_group_obu /src/aom/av1/decoder/obu.c:361:3
    #6 0x5f768f in aom_decode_frame_from_obus /src/aom/av1/decoder/obu.c:1027:33
    #7 0x5e2a2f in av1_receive_compressed_data /src/aom/av1/decoder/decoder.c:476:7
    #8 0x569853 in frame_worker_hook /src/aom/av1/av1_dx_iface.c:411:16
    #9 0x843531 in execute /src/aom/aom_util/aom_thread.c:163:27
    #10 0x55abbc in decode_one /src/aom/av1/av1_dx_iface.c:528:3
    #11 0x55abbc in decoder_decode /src/aom/av1/av1_dx_iface.c:667:11
    #12 0x558bc3 in aom_codec_decode /src/aom/aom/src/aom_decoder.c:103:11
    #13 0x557150 in LLVMFuzzerTestOneInput /src/aom/examples/av1_dec_fuzzer.cc:56:9
    #14 0x459e53 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #15 0x443c62 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #16 0x449aaa in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #17 0x475792 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0x7ec7e0fc483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--aom_memalign--aom_malloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/aom/av1/common/alloccommon.c:92:53 in av1_free_cdef_buffers
Shadow bytes around the buggy address:
  0x0c087fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c087fff8000: fa fa 00 00 00 00 00 00 fa fa 00 00 00 00 00 00
  0x0c087fff8010: fa fa 00 00 00 00 07 fa fa fa 00 00 00 00 07 fa
=>0x0c087fff8020: fa fa 00 00 00 00 00[07]fa fa fa fa fa fa fa fa
  0x0c087fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c087fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING