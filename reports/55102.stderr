INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2107577780
INFO: Loaded 1 modules   (56256 inline 8-bit counters): 56256 [0x8aa87e0, 0x8ab63a0), 
INFO: Loaded 1 PC tables (56256 PCs): 56256 [0x89638a0,0x89d16a0), 
/out/ffmpeg_AV_CODEC_ID_SCPR_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xec736020 at pc 0x08275252 bp 0xff887138 sp 0xff887130
READ of size 4 at 0xec736020 thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x8275251 in decode_run_p /src/ffmpeg/libavcodec/scpr.h:283:19
    #1 0x8266196 in decompress_p3 /src/ffmpeg/libavcodec/scpr3.c:1197:27
    #2 0x825b2d2 in decode_frame /src/ffmpeg/libavcodec/scpr.c:568:19
    #3 0x820a8c5 in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:285:15
    #4 0x820a8c5 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:541:15
    #5 0x820a8c5 in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:560:15
    #6 0x820a036 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:635:15
    #7 0x81f1b4e in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:512:25
    #8 0x80b02ee in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #9 0x809b24e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #10 0x80a0e50 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #11 0x80caa37 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0xf4513ed4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aed4) (BuildId: f0e9c9950026d7f234a4a1d03670a7ed59ceb726)
    #13 0x8092395 in _start (/out/ffmpeg_AV_CODEC_ID_SCPR_fuzzer+0x8092395)

DEDUP_TOKEN: decode_run_p--decompress_p3--decode_frame
0xec736020 is located 0 bytes to the right of 48160-byte region [0xec72a400,0xec736020)
allocated by thread T0 here:
    #0 0x81ac99a in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x87b028f in av_malloc /src/ffmpeg/libavutil/mem.c:105:9
    #2 0x876c0ea in av_buffer_alloc /src/ffmpeg/libavutil/buffer.c:82:12
    #3 0x81f4956 in fuzz_video_get_buffer /src/ffmpeg/tools/target_dec_fuzzer.c:131:25
    #4 0x81f4956 in fuzz_get_buffer2 /src/ffmpeg/tools/target_dec_fuzzer.c:152:18
    #5 0x82152ae in ff_get_buffer /src/ffmpeg/libavcodec/decode.c:1516:11
    #6 0x82162c1 in reget_buffer_internal /src/ffmpeg/libavcodec/decode.c:1556:16
    #7 0x82162c1 in ff_reget_buffer /src/ffmpeg/libavcodec/decode.c:1581:15
    #8 0x8258a58 in decode_frame /src/ffmpeg/libavcodec/scpr.c:508:16
    #9 0x820a8c5 in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:285:15
    #10 0x820a8c5 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:541:15
    #11 0x820a8c5 in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:560:15
    #12 0x820a036 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:635:15
    #13 0x81f1b4e in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:512:25
    #14 0x80b02ee in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #15 0x809b24e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #16 0x80a0e50 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #17 0x80caa37 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #18 0xf4513ed4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aed4) (BuildId: f0e9c9950026d7f234a4a1d03670a7ed59ceb726)

DEDUP_TOKEN: posix_memalign--av_malloc--av_buffer_alloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/scpr.h:283:19 in decode_run_p
Shadow bytes around the buggy address:
  0x3d8e6bb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d8e6bc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d8e6bd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d8e6be0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d8e6bf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x3d8e6c00: 00 00 00 00[fa]fa fa fa fa fa fa fa fa fa fa fa
  0x3d8e6c10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d8e6c20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d8e6c30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d8e6c40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d8e6c50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
