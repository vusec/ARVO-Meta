Unable to find image 'n132/arvo:1947-vul' locally
1947-vul: Pulling from n132/arvo
594cf71eb8ba: Already exists
3b5244e3179b: Already exists
37a19d5c10ab: Already exists
d9e6649d6df2: Already exists
5d01611bd83b: Already exists
930cabbe7110: Already exists
796d468c634b: Already exists
951984a1fdc7: Already exists
b853ea7a7aeb: Already exists
147c29d7d496: Already exists
bd2fd9663328: Already exists
e25b754f67ba: Already exists
98fee31dcd62: Already exists
ccdcb0b49633: Already exists
ea1107c8a642: Already exists
a83c25774e31: Already exists
653710d8bd83: Already exists
4c7cc9051254: Already exists
4c37c6364b47: Already exists
86b2b4facbe4: Already exists
7473467e72d9: Already exists
54987ad3036b: Already exists
677077d576c4: Already exists
e1738a589be4: Already exists
5eb4c6b8ac6f: Already exists
35f356d03ce0: Already exists
90e8bde239e6: Already exists
84a7a300cc5e: Already exists
3cf12177fd21: Already exists
758e3148cb96: Already exists
f59384b35747: Already exists
dd7074fbae70: Already exists
c58c67db8173: Already exists
fa269515a10d: Already exists
cacf86634a73: Already exists
7e11c6049596: Already exists
3a7ea579cad1: Already exists
f555d4f7dad9: Already exists
f280266b4816: Already exists
e7ce56da01c9: Already exists
a92e68a0a908: Already exists
ea193c2d6328: Already exists
26310e0b65a4: Already exists
64054ded7e7f: Already exists
2c66111ffa05: Already exists
86b4e0816290: Already exists
41e2107de50e: Already exists
643f0093873e: Already exists
de9474c960fc: Already exists
88dbcd845398: Already exists
d7b841ee2afa: Pulling fs layer
d5d7293444fe: Pulling fs layer
d5d7293444fe: Download complete
d7b841ee2afa: Verifying Checksum
d7b841ee2afa: Download complete
d7b841ee2afa: Pull complete
d5d7293444fe: Pull complete
Digest: sha256:55f6dd55ffc6391209b06b3da84a2329655ffdad8c6c708e19820fe2fb514610
Status: Downloaded newer image for n132/arvo:1947-vul
INFO: Seed: 3481709112
INFO: Loaded 1 modules (20156 guards): [0xd7a410, 0xd8df00), 
/out/ffmpeg_AV_CODEC_ID_VP9_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==7==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7b41a10878a0 at pc 0x0000005bc6f5 bp 0x7ffeb23c8c70 sp 0x7ffeb23c8c68
WRITE of size 2 at 0x7b41a10878a0 thread T0
SCARINESS: 48 (2-byte-write-stack-buffer-overflow)
    #0 0x5bc6f4 in do_bilin_2d_c /src/ffmpeg/libavcodec/vp9dsp_template.c:2175:24
    #1 0x5bc6f4 in put_bilin_2d_hv_c /src/ffmpeg/libavcodec/vp9dsp_template.c:2205
    #2 0x5b6a07 in put_bilin_16hv_c /src/ffmpeg/libavcodec/vp9dsp_template.c:2254:1
    #3 0x6b8131 in mc_chroma_unscaled /src/ffmpeg/libavcodec/vp9recon.c:365:9
    #4 0x6b8131 in inter_pred_16bpp /src/ffmpeg/libavcodec/vp9_mc_template.c:418
    #5 0x6602a6 in inter_recon /src/ffmpeg/libavcodec/vp9recon.c:580:13
    #6 0x6602a6 in ff_vp9_inter_recon_16bpp /src/ffmpeg/libavcodec/vp9recon.c:638
    #7 0x560793 in ff_vp9_decode_block /src/ffmpeg/libavcodec/vp9block.c:1391:13
    #8 0x55b3ce in decode_sb /src/ffmpeg/libavcodec/vp9.c:953:17
    #9 0x55b86c in decode_sb /src/ffmpeg/libavcodec/vp9.c:968:17
    #10 0x54a51d in vp9_decode_frame /src/ffmpeg/libavcodec/vp9.c:1314:29
    #11 0x529e93 in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:417:15
    #12 0x529984 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:620:15
    #13 0x520a8e in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:638:15
    #14 0x52000d in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:678:15
    #15 0x52193d in compat_decode /src/ffmpeg/libavcodec/decode.c:853:15
    #16 0x518dc7 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:216:23
    #17 0x91b509 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:458:13
    #18 0x91bd3a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:397:3
    #19 0x8f2c46 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:268:6
    #20 0x8fe1d0 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:683:9
    #21 0x8f2258 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #22 0x7b41a10d283f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #23 0x41d658 in _start (/out/ffmpeg_AV_CODEC_ID_VP9_fuzzer+0x41d658)

DEDUP_TOKEN: do_bilin_2d_c--put_bilin_2d_hv_c--put_bilin_16hv_c
Address 0x7b41a10878a0 is located in stack of thread T0 at offset 8352 in frame
    #0 0x5bc2ff in put_bilin_2d_hv_c /src/ffmpeg/libavcodec/vp9dsp_template.c:2205

DEDUP_TOKEN: put_bilin_2d_hv_c
  This frame has 1 object(s):
    [32, 8352) 'tmp.i' (line 2164) <== Memory access at offset 8352 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/ffmpeg/libavcodec/vp9dsp_template.c:2175:24 in do_bilin_2d_c
Shadow bytes around the buggy address:
  0x0f68b4208ec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f68b4208ed0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f68b4208ee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f68b4208ef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f68b4208f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0f68b4208f10: 00 00 00 00[f3]f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3
  0x0f68b4208f20: f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3 f3
  0x0f68b4208f30: f3 f3 f3 f3 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f68b4208f40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f68b4208f50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0f68b4208f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
