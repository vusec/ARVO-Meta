INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3285324024
INFO: Loaded 1 modules   (44238 inline 8-bit counters): 44238 [0xdcb3e0, 0xdd60ae),
INFO: Loaded 1 PC tables (44238 PCs): 44238 [0xac54b0,0xb72190),
/out/decompress_frame_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x611000000276 at pc 0x000000a125e7 bp 0x7fff069e3ed0 sp 0x7fff069e3ec8
READ of size 1 at 0x611000000276 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0xa125e6 in inflate /src/c-blosc2/internal-complibs/zlib-ng-2.0.2/inflate.c:408:13
    #1 0x69751d in uncompress2 /src/c-blosc2/internal-complibs/zlib-ng-2.0.2/uncompr.c:67:15
    #2 0x69795b in uncompress /src/c-blosc2/internal-complibs/zlib-ng-2.0.2/uncompr.c:84:12
    #3 0x573cf8 in zlib_wrap_decompress /src/c-blosc2/blosc/blosc2.c:478:12
    #4 0x573cf8 in blosc_d /src/c-blosc2/blosc/blosc2.c:1591:18
    #5 0x565ab2 in serial_blosc /src/c-blosc2/blosc/blosc2.c:1685:16
    #6 0x565ab2 in do_job /src/c-blosc2/blosc/blosc2.c:1850:15
    #7 0x56cdca in blosc_run_decompression_with_context /src/c-blosc2/blosc/blosc2.c:2489:13
    #8 0x56d20c in blosc2_decompress_ctx /src/c-blosc2/blosc/blosc2.c:2509:12
    #9 0x5aec8b in frame_decompress_chunk /src/c-blosc2/blosc/frame.c:3006:23
    #10 0x58f1c6 in blosc2_schunk_decompress_chunk /src/c-blosc2/blosc/schunk.c:915:17
    #11 0x55df76 in LLVMFuzzerTestOneInput /src/c-blosc2/tests/fuzz/fuzz_decompress_frame.c:38:15
    #12 0x460e53 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #13 0x44ac62 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #14 0x450aaa in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #15 0x47c792 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #16 0x774cba8e883f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #17 0x425948 in _start (/out/decompress_frame_fuzzer+0x425948)

DEDUP_TOKEN: inflate--uncompress2--uncompress
0x611000000276 is located 0 bytes to the right of 246-byte region [0x611000000180,0x611000000276)
allocated by thread T0 here:
    #0 0x52a78d in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x43ebd7 in operator new(unsigned long) (/out/decompress_frame_fuzzer+0x43ebd7)
    #2 0x44ac62 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #3 0x450aaa in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #4 0x47c792 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0x774cba8e883f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--operator new(unsigned long)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/c-blosc2/internal-complibs/zlib-ng-2.0.2/inflate.c:408:13 in inflate
Shadow bytes around the buggy address:
  0x0c227fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c227fff8000: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c227fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c227fff8020: 00 00 00 00 00 00 06 fa fa fa fa fa fa fa fa fa
  0x0c227fff8030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c227fff8040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00[06]fa
  0x0c227fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING