======================= INFO =========================
This binary is built for AFL-fuzz.
To run the target function on individual input(s) execute this:
  /out/coder_WPG_fuzzer < INPUT_FILE
or
  /out/coder_WPG_fuzzer INPUT_FILE1 [INPUT_FILE2 ... ]
To fuzz with afl-fuzz execute this:
  afl-fuzz [afl-flags] /out/coder_WPG_fuzzer [-N]
afl-fuzz will run N iterations before re-spawning the process (default: 1000)
======================================================
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x622000001564 at pc 0x000000859a04 bp 0x7fff896ee1d0 sp 0x7fff896ee1c8
WRITE of size 2 at 0x622000001564 thread T0
SCARINESS: 33 (2-byte-write-heap-buffer-overflow)
    #0 0x859a03 in InsertRow /src/graphicsmagick/coders/wpg.c:332:25
    #1 0x85b06b in ZeroFillMissingData /src/graphicsmagick/coders/wpg.c:422:9
    #2 0x857dfe in UnpackWPGRaster /src/graphicsmagick/coders/wpg.c:510:17
    #3 0x8535fd in ReadWPGImage /src/graphicsmagick/coders/wpg.c:1382:20
    #4 0x56f0cf in ReadImage /src/graphicsmagick/magick/constitute.c:1607:13
    #5 0x528050 in BlobToImage /src/graphicsmagick/magick/blob.c:764:13
    #6 0x4d318b in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1591:5
    #7 0x4ca739 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:22:15
    #8 0x4cbdce in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:216:5
    #9 0x4cbdce in main /src/libfuzzer/afl/afl_driver.cpp:253:12
    #10 0x793600d3e83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #11 0x41f148 in _start (/out/coder_WPG_fuzzer+0x41f148)

DEDUP_TOKEN: InsertRow--ZeroFillMissingData--UnpackWPGRaster
0x622000001564 is located 0 bytes to the right of 5220-byte region [0x622000000100,0x622000001564)
allocated by thread T0 here:
    #0 0x497d2d in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x649a8c in OpenCache /src/graphicsmagick/magick/pixel_cache.c:2497:7
    #2 0x648fc7 in ModifyCache /src/graphicsmagick/magick/pixel_cache.c:4586:18
    #3 0x64c908 in SetCacheNexus /src/graphicsmagick/magick/pixel_cache.c:922:7
    #4 0x64c75e in SetCacheViewPixels /src/graphicsmagick/magick/pixel_cache.c:4883:10
    #5 0x739fa4 in ReadDIBImage /src/graphicsmagick/coders/dib.c:826:11
    #6 0x56f0cf in ReadImage /src/graphicsmagick/magick/constitute.c:1607:13
    #7 0x528050 in BlobToImage /src/graphicsmagick/magick/blob.c:764:13
    #8 0x856df3 in ExtractPostscript /src/graphicsmagick/coders/wpg.c:945:12
    #9 0x8528c9 in ReadWPGImage /src/graphicsmagick/coders/wpg.c:1293:23
    #10 0x56f0cf in ReadImage /src/graphicsmagick/magick/constitute.c:1607:13
    #11 0x528050 in BlobToImage /src/graphicsmagick/magick/blob.c:764:13
    #12 0x4d318b in Magick::Image::read(Magick::Blob const&) /src/graphicsmagick/Magick++/lib/Image.cpp:1591:5
    #13 0x4ca739 in LLVMFuzzerTestOneInput /src/graphicsmagick/fuzzing/coder_fuzzer.cc:22:15
    #14 0x4cbdce in ExecuteFilesOnyByOne /src/libfuzzer/afl/afl_driver.cpp:216:5
    #15 0x4cbdce in main /src/libfuzzer/afl/afl_driver.cpp:253:12
    #16 0x793600d3e83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: malloc--OpenCache--ModifyCache
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/graphicsmagick/coders/wpg.c:332:25 in InsertRow
Shadow bytes around the buggy address:
  0x0c447fff8250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c447fff8260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c447fff8270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c447fff8280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c447fff8290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c447fff82a0: 00 00 00 00 00 00 00 00 00 00 00 00[04]fa fa fa
  0x0c447fff82b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c447fff82c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c447fff82d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c447fff82e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c447fff82f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING