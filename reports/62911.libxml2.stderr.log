Running LLVMFuzzerInitialize ...
continue...
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x619000014498 at pc 0x0000004389e6 bp 0x7fff259cca20 sp 0x7fff259cc1d0
READ of size 8128207 at 0x619000014498 thread T0
SCARINESS: 26 (multi-byte-read-heap-buffer-overflow)
    #0 0x4389e5 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long) /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:860:7
    #1 0x438f3b in bcmp /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:906:10
    #2 0x7e5b39 in xmlDictFindEntry /src/libxml2/dict.c:541:26
    #3 0x7e5b39 in xmlDictLookupInternal /src/libxml2/dict.c:678:17
    #4 0x7e5355 in xmlDictLookup /src/libxml2/dict.c:795:13
    #5 0x62f0c1 in htmlParseNameComplex /src/libxml2/HTMLparser.c:2686:12
    #6 0x610bf1 in htmlParseName /src/libxml2/HTMLparser.c:2633:12
    #7 0x6101d6 in htmlParseEntityRef /src/libxml2/HTMLparser.c:2866:16
    #8 0x6366d8 in htmlParseReference /src/libxml2/HTMLparser.c:4174:8
    #9 0x6268e5 in htmlParseTryOrFinish /src/libxml2/HTMLparser.c:5832:29
    #10 0x6268e5 in htmlParseChunk /src/libxml2/HTMLparser.c:5924:5
    #11 0x4dd065 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/html.c:83:17
    #12 0x4df50d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7
    #13 0x4df318 in LLVMFuzzerRunDriver /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c
    #14 0x4deed8 in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:300:10
    #15 0x73296434b082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #16 0x41e5ad in _start (/out/html+0x41e5ad)

DEDUP_TOKEN: MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long)--bcmp--xmlDictFindEntry
0x619000014498 is located 0 bytes to the right of 1048-byte region [0x619000014080,0x619000014498)
allocated by thread T0 here:
    #0 0x49f9e6 in __interceptor_malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:69:3
    #1 0x4dd338 in xmlFuzzMalloc /src/libxml2/fuzz/fuzz.c:84:12
    #2 0x7e71c0 in xmlDictAddString /src/libxml2/dict.c:160:29
    #3 0x7e61fc in xmlDictLookupInternal /src/libxml2/dict.c:702:15
    #4 0x7e5355 in xmlDictLookup /src/libxml2/dict.c:795:13
    #5 0x63099a in htmlParseHTMLName /src/libxml2/HTMLparser.c:2551:11
    #6 0x614c34 in htmlParseStartTag /src/libxml2/HTMLparser.c:3865:12
    #7 0x62585e in htmlParseTryOrFinish /src/libxml2/HTMLparser.c:5614:12
    #8 0x62585e in htmlParseChunk /src/libxml2/HTMLparser.c:5924:5
    #9 0x4dd065 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/html.c:83:17
    #10 0x4df50d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7

DEDUP_TOKEN: __interceptor_malloc--xmlFuzzMalloc--xmlDictAddString
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/../sanitizer_common/sanitizer_common_interceptors.inc:860:7 in MemcmpInterceptorCommon(void*, int (*)(void const*, void const*, unsigned long), void const*, void const*, unsigned long)
Shadow bytes around the buggy address:
  0x0c327fffa840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fffa850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fffa860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fffa870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c327fffa880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c327fffa890: 00 00 00[fa]fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fffa8a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fffa8b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fffa8c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fffa8d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c327fffa8e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING