Running LLVMFuzzerInitialize ...
continue...
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000134 at pc 0x0000005607dc bp 0x7ffec4f4e9c0 sp 0x7ffec4f4e9b8
WRITE of size 1 at 0x602000000134 thread T0
SCARINESS: 31 (1-byte-write-heap-buffer-overflow)
    #0 0x5607db in xmlCopyCharMultiByte /src/libxml2/parserInternals.c:1095:12
    #1 0x510986 in xmlParseCommentComplex /src/libxml2/parser.c:4964:2
    #2 0x50faca in xmlParseComment /src/libxml2/parser.c:5189:5
    #3 0x52eb05 in xmlParseContentInternal /src/libxml2/parser.c:10261:6
    #4 0x526e65 in xmlParseContent /src/libxml2/parser.c:10312:5
    #5 0x526e65 in xmlParseBalancedChunkMemoryInternal /src/libxml2/parser.c:13074:5
    #6 0x523ade in xmlParseReference /src/libxml2/parser.c:7357:12
    #7 0x52e712 in xmlParseContentInternal /src/libxml2/parser.c:10284:6
    #8 0x52f1a2 in xmlParseElement /src/libxml2/parser.c:10346:5
    #9 0x5358d9 in xmlParseDocument /src/libxml2/parser.c:11127:2
    #10 0x54c1a4 in xmlDoRead /src/libxml2/parser.c:14773:5
    #11 0x54c4b9 in xmlReadMemory /src/libxml2/parser.c:14859:13
    #12 0x4dcf89 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/xpath.c:37:11
    #13 0x4df40d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7
    #14 0x4df218 in LLVMFuzzerRunDriver /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c
    #15 0x4dedd8 in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:300:10
    #16 0x791c2ecc9082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #17 0x41e5ad in _start (/out/xpath+0x41e5ad)

DEDUP_TOKEN: xmlCopyCharMultiByte--xmlParseCommentComplex--xmlParseComment
0x602000000134 is located 0 bytes to the right of 4-byte region [0x602000000130,0x602000000134)
allocated by thread T0 here:
    #0 0x49fdec in __interceptor_realloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:85:3
    #1 0x4dd2e8 in xmlFuzzRealloc /src/libxml2/fuzz/fuzz.c:99:12
    #2 0x510821 in xmlParseCommentComplex /src/libxml2/parser.c:4955:28
    #3 0x50faca in xmlParseComment /src/libxml2/parser.c:5189:5
    #4 0x52eb05 in xmlParseContentInternal /src/libxml2/parser.c:10261:6
    #5 0x526e65 in xmlParseContent /src/libxml2/parser.c:10312:5
    #6 0x526e65 in xmlParseBalancedChunkMemoryInternal /src/libxml2/parser.c:13074:5
    #7 0x523ade in xmlParseReference /src/libxml2/parser.c:7357:12
    #8 0x52e712 in xmlParseContentInternal /src/libxml2/parser.c:10284:6
    #9 0x52f1a2 in xmlParseElement /src/libxml2/parser.c:10346:5
    #10 0x5358d9 in xmlParseDocument /src/libxml2/parser.c:11127:2
    #11 0x54c1a4 in xmlDoRead /src/libxml2/parser.c:14773:5
    #12 0x54c4b9 in xmlReadMemory /src/libxml2/parser.c:14859:13
    #13 0x4dcf89 in LLVMFuzzerTestOneInput /src/libxml2/fuzz/xpath.c:37:11
    #14 0x4df40d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7

DEDUP_TOKEN: __interceptor_realloc--xmlFuzzRealloc--xmlParseCommentComplex
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libxml2/parserInternals.c:1095:12 in xmlCopyCharMultiByte
Shadow bytes around the buggy address:
  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff8000: fa fa 00 00 fa fa 04 fa fa fa 04 fa fa fa 02 fa
  0x0c047fff8010: fa fa 00 06 fa fa 00 fa fa fa fd fa fa fa 02 fa
=>0x0c047fff8020: fa fa 02 fa fa fa[04]fa fa fa fa fa fa fa fa fa
  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING