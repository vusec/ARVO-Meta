INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3298869882
INFO: Loaded 1 modules   (56994 inline 8-bit counters): 56994 [0x8ac5ad0, 0x8ad3972),
INFO: Loaded 1 PC tables (56994 PCs): 56994 [0x897e520,0x89eda30),
/out/ffmpeg_AV_CODEC_ID_MPEG2VIDEO_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xe96fe800 at pc 0x084cb9a7 bp 0xfff4e368 sp 0xfff4e360
WRITE of size 4 at 0xe96fe800 thread T0
SCARINESS: 36 (4-byte-write-heap-buffer-overflow)
    #0 0x84cb9a6 in put_pixels8_8_c /src/ffmpeg/libavcodec/pel_template.c:78:1
    #1 0x84cb9a6 in put_pixels16_8_c /src/ffmpeg/libavcodec/pel_template.c:78:1
    #2 0x827b910 in mpv_reconstruct_mb_internal /src/ffmpeg/libavcodec/mpv_reconstruct_mb_template.c:294:13
    #3 0x827b910 in ff_mpv_reconstruct_mb /src/ffmpeg/libavcodec/mpegvideo_dec.c:1023:13
    #4 0x826cc72 in mpeg_er_decode_mb /src/ffmpeg/libavcodec/mpeg_er.c:99:5
    #5 0x840e3c6 in guess_mv /src/ffmpeg/libavcodec/error_resilience.c:452:17
    #6 0x8409b45 in ff_er_frame_end /src/ffmpeg/libavcodec/error_resilience.c:1231:9
    #7 0x824c978 in slice_end /src/ffmpeg/libavcodec/mpeg12dec.c:2027:9
    #8 0x824c978 in decode_chunks /src/ffmpeg/libavcodec/mpeg12dec.c:2464:23
    #9 0x8248dfc in mpeg_decode_frame /src/ffmpeg/libavcodec/mpeg12dec.c:2813:11
    #10 0x820b84a in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:287:15
    #11 0x820b84a in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:540:15
    #12 0x820b84a in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:560:15
    #13 0x820b006 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:635:15
    #14 0x81f2e2e in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:513:25
    #15 0x80b142e in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #16 0x809c38e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #17 0x80a1f90 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #18 0x80cbb77 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #19 0xea88eed4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aed4) (BuildId: f0e9c9950026d7f234a4a1d03670a7ed59ceb726)
    #20 0x80934d5 in _start (/out/ffmpeg_AV_CODEC_ID_MPEG2VIDEO_fuzzer+0x80934d5)

DEDUP_TOKEN: put_pixels8_8_c--put_pixels16_8_c--mpv_reconstruct_mb_internal
0xe96fe800 is located 0 bytes to the right of 532480-byte region [0xe967c800,0xe96fe800)
allocated by thread T0 here:
    #0 0x81adada in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x87c672f in av_malloc /src/ffmpeg/libavutil/mem.c:105:9
    #2 0x8779f8a in av_buffer_alloc /src/ffmpeg/libavutil/buffer.c:82:12
    #3 0x81f5af6 in fuzz_video_get_buffer /src/ffmpeg/tools/target_dec_fuzzer.c:131:25
    #4 0x81f5af6 in fuzz_get_buffer2 /src/ffmpeg/tools/target_dec_fuzzer.c:152:18
    #5 0x82163de in ff_get_buffer /src/ffmpeg/libavcodec/decode.c:1545:11
    #6 0x82a3247 in ff_thread_get_ext_buffer /src/ffmpeg/libavcodec/pthread_frame.c:947:16
    #7 0x8559d42 in alloc_frame_buffer /src/ffmpeg/libavcodec/mpegpicture.c:145:13
    #8 0x8559d42 in ff_alloc_picture /src/ffmpeg/libavcodec/mpegpicture.c:272:13
    #9 0x8275889 in alloc_picture /src/ffmpeg/libavcodec/mpegvideo_dec.c:245:12
    #10 0x8275889 in ff_mpv_frame_start /src/ffmpeg/libavcodec/mpegvideo_dec.c:329:9
    #11 0x825bace in mpeg_field_start /src/ffmpeg/libavcodec/mpeg12dec.c:1580:20
    #12 0x825322a in decode_chunks /src/ffmpeg/libavcodec/mpeg12dec.c:2712:32
    #13 0x8248dfc in mpeg_decode_frame /src/ffmpeg/libavcodec/mpeg12dec.c:2813:11
    #14 0x820b84a in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:287:15
    #15 0x820b84a in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:540:15
    #16 0x820b84a in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:560:15
    #17 0x820b006 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:635:15
    #18 0x81f2e2e in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:513:25
    #19 0x80b142e in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #20 0x809c38e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #21 0x80a1f90 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #22 0x80cbb77 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #23 0xea88eed4 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x1aed4) (BuildId: f0e9c9950026d7f234a4a1d03670a7ed59ceb726)

DEDUP_TOKEN: posix_memalign--av_malloc--av_buffer_alloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/pel_template.c:78:1 in put_pixels8_8_c
Shadow bytes around the buggy address:
  0x3d2dfcb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d2dfcc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d2dfcd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d2dfce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x3d2dfcf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x3d2dfd00:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d2dfd10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d2dfd20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d2dfd30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d2dfd40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d2dfd50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING