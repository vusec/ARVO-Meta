Accepting input from '/tmp/poc'
Usage for fuzzing: honggfuzz -P [flags] -- /out/simple_compress
=================================================================
==13==ERROR: AddressSanitizer: global-buffer-overflow on address 0x000000a26d30 at pc 0x000000900405 bp 0x7ffd008365d0 sp 0x7ffd008365c8
READ of size 4 at 0x000000a26d30 thread T0
SCARINESS: 17 (4-byte-read-global-buffer-overflow)
    #0 0x900404 in ZSTD_litLengthPrice /src/zstd/tests/fuzz/../../lib/compress/zstd_opt.c:274:17
    #1 0x900404 in ZSTD_compressBlock_opt_generic /src/zstd/tests/fuzz/../../lib/compress/zstd_opt.c:1072:40
    #2 0x8fa774 in ZSTD_compressBlock_btopt /src/zstd/tests/fuzz/../../lib/compress/zstd_opt.c:1251:12
    #3 0x8bf026 in ZSTD_buildSeqStore /src/zstd/tests/fuzz/../../lib/compress/zstd_compress.c:2887:26
    #4 0x89af70 in ZSTD_compressBlock_splitBlock /src/zstd/tests/fuzz/../../lib/compress/zstd_compress.c:3727:28
    #5 0x89af70 in ZSTD_compress_frameChunk /src/zstd/tests/fuzz/../../lib/compress/zstd_compress.c:3967:25
    #6 0x89af70 in ZSTD_compressContinue_internal /src/zstd/tests/fuzz/../../lib/compress/zstd_compress.c:4142:30
    #7 0x8a2927 in ZSTD_compressEnd /src/zstd/tests/fuzz/../../lib/compress/zstd_compress.c:4646:26
    #8 0x8a3f3d in ZSTD_compress_advanced_internal /src/zstd/tests/fuzz/../../lib/compress/zstd_compress.c:4695:12
    #9 0x8a3f3d in ZSTD_compress_usingDict /src/zstd/tests/fuzz/../../lib/compress/zstd_compress.c:4710:12
    #10 0x8a41b5 in ZSTD_compressCCtx /src/zstd/tests/fuzz/../../lib/compress/zstd_compress.c:4720:12
    #11 0x9e69c5 in LLVMFuzzerTestOneInput /src/zstd/tests/fuzz/simple_compress.c:46:24
    #12 0x9e70eb in main (/out/simple_compress+0x9e70eb)
    #13 0x708929cb2082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #14 0x41d60d in _start (/out/simple_compress+0x41d60d)

DEDUP_TOKEN: ZSTD_litLengthPrice--ZSTD_compressBlock_opt_generic--ZSTD_compressBlock_btopt
0x000000a26d30 is located 48 bytes to the left of global variable '<string literal>' defined in '../../lib/compress/zstd_opt.c:52:5' (0xa26d60) of size 27
  '<string literal>' is ascii string 'hb + BITCOST_ACCURACY < 31'
0x000000a26d30 is located 0 bytes to the right of global variable 'LL_bits' defined in '../../lib/compress/../common/zstd_internal.h:195:30' (0xa26ca0) of size 144
SUMMARY: AddressSanitizer: global-buffer-overflow /src/zstd/tests/fuzz/../../lib/compress/zstd_opt.c:274:17 in ZSTD_litLengthPrice
Shadow bytes around the buggy address:
  0x00008013cd50: 00 00 03 f9 f9 f9 f9 f9 00 f9 f9 f9 00 00 02 f9
  0x00008013cd60: f9 f9 f9 f9 00 00 00 00 04 f9 f9 f9 f9 f9 f9 f9
  0x00008013cd70: 00 00 00 01 f9 f9 f9 f9 00 00 05 f9 f9 f9 f9 f9
  0x00008013cd80: 00 05 f9 f9 00 00 00 00 00 00 00 00 00 00 05 f9
  0x00008013cd90: f9 f9 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
=>0x00008013cda0: 00 00 00 00 00 00[f9]f9 f9 f9 f9 f9 00 00 00 03
  0x00008013cdb0: f9 f9 f9 f9 00 00 00 01 f9 f9 f9 f9 00 00 00 00
  0x00008013cdc0: 00 00 00 00 f9 f9 f9 f9 00 00 00 f9 f9 f9 f9 f9
  0x00008013cdd0: 00 00 00 00 00 00 00 00 00 00 01 f9 f9 f9 f9 f9
  0x00008013cde0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x00008013cdf0: 00 00 00 00 00 00 00 00 00 00 04 f9 f9 f9 f9 f9
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING