INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 2008184339
INFO: Loaded 1 modules   (20570 inline 8-bit counters): 20570 [0x900b60, 0x905bba), 
INFO: Loaded 1 PC tables (20570 PCs): 20570 [0x7e6148,0x8366e8), 
/out/libraw_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==7==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x76160a9d27e0 at pc 0x00000070fcc6 bp 0x7ffda21a26b0 sp 0x7ffda21a26a8
WRITE of size 1 at 0x76160a9d27e0 thread T0
SCARINESS: 46 (1-byte-write-stack-buffer-overflow)
    #0 0x70fcc5 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:255:38
    #1 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #2 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #3 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #4 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #5 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #6 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #7 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #8 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #9 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #10 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #11 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #12 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #13 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #14 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #15 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #16 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #17 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #18 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #19 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #20 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #21 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #22 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #23 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #24 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #25 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #26 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #27 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #28 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #29 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #30 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #31 0x70d8a2 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&) /src/libraw/src/metadata/cr3_parser.cpp:583:13
    #32 0x69303c in LibRaw::identify() /src/libraw/src/metadata/identify.cpp:708:11
    #33 0x57f581 in LibRaw::open_datastream(LibRaw_abstract_datastream*) /src/libraw/src/utils/open.cpp:480:4
    #34 0x57e5fd in LibRaw::open_buffer(void const*, unsigned long) /src/libraw/src/utils/open.cpp:240:13
    #35 0x55e9ea in LLVMFuzzerTestOneInput /src/libraw_fuzzer.cc:41:24
    #36 0x456da3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) cxa_noexception.cpp
    #37 0x4425f2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #38 0x44816c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) cxa_noexception.cpp
    #39 0x4711a2 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #40 0x76160b610082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #41 0x41f7ed in _start (/out/libraw_fuzzer+0x41f7ed)

DEDUP_TOKEN: LibRaw::parseCR3(long long, long long, short&, char*, short&, short&)--LibRaw::parseCR3(long long, long long, short&, char*, short&, short&)--LibRaw::parseCR3(long long, long long, short&, char*, short&, short&)
Address 0x76160a9d27e0 is located in stack of thread T0 at offset 12256 in frame
    #0 0x68b20f in LibRaw::identify() /src/libraw/src/metadata/identify.cpp:181

DEDUP_TOKEN: LibRaw::identify()
  This frame has 8 object(s):
    [32, 10952) 'table' (line 400)
    [11216, 11280) 'head' (line 406)
    [11312, 11952) 'jh' (line 409)
    [12080, 12082) 'nesting' (line 701)
    [12096, 12098) 'nTrack' (line 702)
    [12112, 12114) 'TrackType' (line 703)
    [12128, 12256) 'AtomNameStack' (line 704) <== Memory access at offset 12256 overflows this variable
    [12288, 12320) 'cnorm' (line 1155)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/libraw/src/metadata/cr3_parser.cpp:255:38 in LibRaw::parseCR3(long long, long long, short&, char*, short&, short&)
Shadow bytes around the buggy address:
  0x0ec3415324a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ec3415324b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ec3415324c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ec3415324d0: 00 00 00 00 00 00 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2
  0x0ec3415324e0: f2 f2 f2 f2 f2 f2 02 f2 02 f2 02 f2 00 00 00 00
=>0x0ec3415324f0: 00 00 00 00 00 00 00 00 00 00 00 00[f2]f2 f2 f2
  0x0ec341532500: f8 f8 f8 f8 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x0ec341532510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ec341532520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ec341532530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ec341532540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
