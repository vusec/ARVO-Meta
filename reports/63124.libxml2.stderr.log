INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3301263282
INFO: Loaded 1 modules   (39446 inline 8-bit counters): 39446 [0x996030, 0x99fa46),
INFO: Loaded 1 PC tables (39446 PCs): 39446 [0x85f470,0x8f95d0),
/out/xslt: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000cf4 at pc 0x00000068b5d7 bp 0x7ffdf32508b0 sp 0x7ffdf32508a8
WRITE of size 1 at 0x602000000cf4 thread T0
SCARINESS: 31 (1-byte-write-heap-buffer-overflow)
    #0 0x68b5d6 in xmlCopyCharMultiByte /src/libxml2/parserInternals.c:1095:12
    #1 0x64be18 in xmlParseCommentComplex /src/libxml2/parser.c:4964:2
    #2 0x64a9c3 in xmlParseComment /src/libxml2/parser.c:5189:5
    #3 0x677f09 in xmlParseMisc /src/libxml2/parser.c:11001:6
    #4 0x678642 in xmlParseDocument /src/libxml2/parser.c:11082:5
    #5 0x681d07 in xmlDoRead /src/libxml2/parser.c:14773:5
    #6 0x681f42 in xmlReadMemory /src/libxml2/parser.c:14859:13
    #7 0x56deeb in xsltFuzzXslt /src/libxslt/tests/fuzz/fuzz.c:284:11
    #8 0x56c602 in LLVMFuzzerTestOneInput /src/libxslt/tests/fuzz/xslt.c:18:23
    #9 0x43dfe3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #10 0x429742 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #11 0x42efec in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #12 0x458522 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0x7c47552b2082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #14 0x41f90d in _start (/out/xslt+0x41f90d)

DEDUP_TOKEN: xmlCopyCharMultiByte--xmlParseCommentComplex--xmlParseComment
0x602000000cf4 is located 0 bytes to the right of 4-byte region [0x602000000cf0,0x602000000cf4)
allocated by thread T0 here:
    #0 0x52f57c in __interceptor_realloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:85:3
    #1 0x56ef4a in xmlFuzzRealloc /src/libxslt/tests/fuzz/fuzz.c:437:12
    #2 0x64bd16 in xmlParseCommentComplex /src/libxml2/parser.c:4955:28
    #3 0x64a9c3 in xmlParseComment /src/libxml2/parser.c:5189:5
    #4 0x677f09 in xmlParseMisc /src/libxml2/parser.c:11001:6
    #5 0x678642 in xmlParseDocument /src/libxml2/parser.c:11082:5
    #6 0x681d07 in xmlDoRead /src/libxml2/parser.c:14773:5
    #7 0x681f42 in xmlReadMemory /src/libxml2/parser.c:14859:13
    #8 0x56deeb in xsltFuzzXslt /src/libxslt/tests/fuzz/fuzz.c:284:11
    #9 0x56c602 in LLVMFuzzerTestOneInput /src/libxslt/tests/fuzz/xslt.c:18:23
    #10 0x43dfe3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #11 0x429742 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #12 0x42efec in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #13 0x458522 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #14 0x7c47552b2082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: __interceptor_realloc--xmlFuzzRealloc--xmlParseCommentComplex
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libxml2/parserInternals.c:1095:12 in xmlCopyCharMultiByte
Shadow bytes around the buggy address:
  0x0c047fff8140: fa fa 00 01 fa fa 00 04 fa fa 00 01 fa fa 00 01
  0x0c047fff8150: fa fa 04 fa fa fa 00 00 fa fa 00 fa fa fa 00 fa
  0x0c047fff8160: fa fa 00 fa fa fa 00 00 fa fa 01 fa fa fa 00 00
  0x0c047fff8170: fa fa 02 fa fa fa 00 00 fa fa 02 fa fa fa 04 fa
  0x0c047fff8180: fa fa 04 fa fa fa fd fa fa fa fd fa fa fa 02 fa
=>0x0c047fff8190: fa fa 02 fa fa fa 02 fa fa fa 02 fa fa fa[04]fa
  0x0c047fff81a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff81b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff81c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff81d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff81e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING