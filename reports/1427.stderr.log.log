INFO: Seed: 1813790668
INFO: Loaded 1 modules (68291 guards): [0xe34430, 0xe76f3c), 
/out/ffmpeg_AV_CODEC_ID_CDXL_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==8==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x617000000304 at pc 0x0000004c55e8 bp 0x7ffc941155b0 sp 0x7ffc94114d60
WRITE of size 1536 at 0x617000000304 thread T0
SCARINESS: 45 (multi-byte-write-heap-buffer-overflow)
    #0 0x4c55e7 in __asan_memcpy /src/llvm/projects/compiler-rt/lib/asan/asan_interceptors.cc:469
    #1 0x5306b2 in bytestream2_get_buffer /src/ffmpeg/libavcodec/bytestream.h:268:5
    #2 0x5306b2 in chunky2chunky /src/ffmpeg/libavcodec/cdxl.c:118
    #3 0x52d714 in cdxl_decode_ham6 /src/ffmpeg/libavcodec/cdxl.c:164:5
    #4 0x52b39a in cdxl_decode_frame /src/ffmpeg/libavcodec/cdxl.c:307:13
    #5 0x54f12f in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:414:15
    #6 0x54e725 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:617:15
    #7 0x536a5f in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:635:15
    #8 0x53427f in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:675:15
    #9 0x5382cf in compat_decode /src/ffmpeg/libavcodec/decode.c:730:15
    #10 0x5194b2 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:213:23
    #11 0x8d2209 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:440:13
    #12 0x8d29da in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:397:3
    #13 0x8a9d36 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:268:6
    #14 0x8b51d6 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:682:9
    #15 0x8a9358 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #16 0x7fa7d144c83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #17 0x41d658 in _start (/out/ffmpeg_AV_CODEC_ID_CDXL_fuzzer+0x41d658)

DEDUP_TOKEN: __asan_memcpy--bytestream2_get_buffer--chunky2chunky
0x617000000304 is located 0 bytes to the right of 644-byte region [0x617000000080,0x617000000304)
allocated by thread T0 here:
    #0 0x4dcdc0 in __interceptor_posix_memalign /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:142
    #1 0x826c54 in av_malloc /src/ffmpeg/libavutil/mem.c:87:9
    #2 0x82761b in av_mallocz /src/ffmpeg/libavutil/mem.c:224:17
    #3 0x5790c7 in ff_fast_malloc /src/ffmpeg/./libavutil/mem_internal.h:38:26
    #4 0x578ea7 in av_fast_padded_malloc /src/ffmpeg/libavcodec/utils.c:129:10
    #5 0x52ae9b in cdxl_decode_frame /src/ffmpeg/libavcodec/cdxl.c:300:9
    #6 0x54f12f in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:414:15
    #7 0x54e725 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:617:15
    #8 0x536a5f in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:635:15
    #9 0x53427f in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:675:15
    #10 0x5382cf in compat_decode /src/ffmpeg/libavcodec/decode.c:730:15
    #11 0x5194b2 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:213:23
    #12 0x8d2209 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:440:13
    #13 0x8d29da in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:397:3
    #14 0x8a9d36 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:268:6
    #15 0x8b51d6 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:682:9
    #16 0x8a9358 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #17 0x7fa7d144c83f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: __interceptor_posix_memalign--av_malloc--av_mallocz
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm/projects/compiler-rt/lib/asan/asan_interceptors.cc:469 in __asan_memcpy
Shadow bytes around the buggy address:
  0x0c2e7fff8010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2e7fff8020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2e7fff8030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2e7fff8040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2e7fff8050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c2e7fff8060:[04]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==8==ABORTING
