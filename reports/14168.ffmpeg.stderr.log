INFO: Seed: 186769576
INFO: Loaded 1 modules   (38758 inline 8-bit counters): 38758 [0xf8edd0, 0xf98536),
INFO: Loaded 1 PC tables (38758 PCs): 38758 [0xbd8df0,0xc70450),
/out/ffmpeg_AV_CODEC_ID_AGM_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x611000000370 at pc 0x0000004fc45a bp 0x7ffedfabc670 sp 0x7ffedfabc668
READ of size 2 at 0x611000000370 thread T0
SCARINESS: 14 (2-byte-read-heap-buffer-overflow)
    #0 0x4fc459 in decode_inter_plane /src/ffmpeg/libavcodec/agm.c:289:52
    #1 0x4f871e in decode_inter /src/ffmpeg/libavcodec/agm.c:479:11
    #2 0x4f77c1 in decode_frame /src/ffmpeg/libavcodec/agm.c:585:15
    #3 0x50ebd4 in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:433:15
    #4 0x50e831 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:629:15
    #5 0x504641 in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:647:15
    #6 0x504452 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:705:15
    #7 0x505090 in compat_decode /src/ffmpeg/libavcodec/decode.c:796:15
    #8 0x4f5b11 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:245:23
    #9 0x9dedf1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:529:15
    #10 0x99e72f in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:286:6
    #11 0x9aa403 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:715:9
    #12 0x99dd87 in main /src/libfuzzer/FuzzerMain.cpp:19:10
    #13 0x7a87f1b0483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #14 0x41e288 in _start (/out/ffmpeg_AV_CODEC_ID_AGM_fuzzer+0x41e288)

DEDUP_TOKEN: decode_inter_plane--decode_inter--decode_frame
0x611000000370 is located 0 bytes to the right of 176-byte region [0x6110000002c0,0x611000000370)
allocated by thread T0 here:
    #0 0x4b19ae in __interceptor_posix_memalign /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:218
    #1 0x940506 in av_malloc /src/ffmpeg/libavutil/mem.c:87:9
    #2 0x940cb9 in av_mallocz /src/ffmpeg/libavutil/mem.c:238:17
    #3 0x52df20 in ff_fast_malloc /src/ffmpeg/./libavutil/mem_internal.h:38:26
    #4 0x52ddc7 in av_fast_padded_malloc /src/ffmpeg/libavcodec/utils.c:78:10
    #5 0x4fae27 in decode_motion_vectors /src/ffmpeg/libavcodec/agm.c:427:5
    #6 0x4f8622 in decode_inter /src/ffmpeg/libavcodec/agm.c:471:15
    #7 0x4f77c1 in decode_frame /src/ffmpeg/libavcodec/agm.c:585:15
    #8 0x50ebd4 in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:433:15
    #9 0x50e831 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:629:15
    #10 0x504641 in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:647:15
    #11 0x504452 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:705:15
    #12 0x505090 in compat_decode /src/ffmpeg/libavcodec/decode.c:796:15
    #13 0x4f5b11 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:245:23
    #14 0x9dedf1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:529:15
    #15 0x99e72f in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:286:6
    #16 0x9aa403 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:715:9
    #17 0x99dd87 in main /src/libfuzzer/FuzzerMain.cpp:19:10
    #18 0x7a87f1b0483f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: __interceptor_posix_memalign--av_malloc--av_mallocz
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/agm.c:289:52 in decode_inter_plane
Shadow bytes around the buggy address:
  0x0c227fff8010: 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fa fa
  0x0c227fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c227fff8040: 00 00 fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8050: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
=>0x0c227fff8060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00[fa]fa
  0x0c227fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c227fff80b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING