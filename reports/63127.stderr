Running LLVMFuzzerInitialize ...
continue...
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000934 at pc 0x0000005110a8 bp 0x7fff582aad30 sp 0x7fff582aad28
WRITE of size 1 at 0x602000000934 thread T0
SCARINESS: 31 (1-byte-write-heap-buffer-overflow)
    #0 0x5110a7 in xmlParseCommentComplex /src/libxml2/parser.c:4981:14
    #1 0x50f92a in xmlParseComment /src/libxml2/parser.c:5189:5
    #2 0x534a38 in xmlParseMisc /src/libxml2/parser.c:11001:6
    #3 0x53522b in xmlParseDocument /src/libxml2/parser.c:11082:5
    #4 0x54d1a2 in xmlDoRead /src/libxml2/parser.c:14773:5
    #5 0x54d1a2 in xmlCtxtReadFile /src/libxml2/parser.c:15026:13
    #6 0x6d2bd7 in xmlSchemaAddSchemaDoc /src/libxml2/xmlschemas.c:10524:12
    #7 0x6d0784 in xmlSchemaParse /src/libxml2/xmlschemas.c:21275:11
    #8 0x4dcf1e in LLVMFuzzerTestOneInput /src/libxml2/fuzz/schema.c:41:19
    #9 0x4df26d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7
    #10 0x4df078 in LLVMFuzzerRunDriver /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c
    #11 0x4dec38 in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:300:10
    #12 0x7427b3dd9082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #13 0x41e5ad in _start (/out/schema+0x41e5ad)

DEDUP_TOKEN: xmlParseCommentComplex--xmlParseComment--xmlParseMisc
0x602000000934 is located 0 bytes to the right of 4-byte region [0x602000000930,0x602000000934)
allocated by thread T0 here:
    #0 0x49fdec in __interceptor_realloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:85:3
    #1 0x4dd148 in xmlFuzzRealloc /src/libxml2/fuzz/fuzz.c:99:12
    #2 0x510681 in xmlParseCommentComplex /src/libxml2/parser.c:4955:28
    #3 0x50f92a in xmlParseComment /src/libxml2/parser.c:5189:5
    #4 0x534a38 in xmlParseMisc /src/libxml2/parser.c:11001:6
    #5 0x53522b in xmlParseDocument /src/libxml2/parser.c:11082:5
    #6 0x54d1a2 in xmlDoRead /src/libxml2/parser.c:14773:5
    #7 0x54d1a2 in xmlCtxtReadFile /src/libxml2/parser.c:15026:13
    #8 0x6d2bd7 in xmlSchemaAddSchemaDoc /src/libxml2/xmlschemas.c:10524:12
    #9 0x6d0784 in xmlSchemaParse /src/libxml2/xmlschemas.c:21275:11
    #10 0x4dcf1e in LLVMFuzzerTestOneInput /src/libxml2/fuzz/schema.c:41:19
    #11 0x4df26d in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:255:7

DEDUP_TOKEN: __interceptor_realloc--xmlFuzzRealloc--xmlParseCommentComplex
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libxml2/parser.c:4981:14 in xmlParseCommentComplex
Shadow bytes around the buggy address:
  0x0c047fff80d0: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa
  0x0c047fff80e0: fa fa 00 02 fa fa fd fd fa fa fd fa fa fa fd fd
  0x0c047fff80f0: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa
  0x0c047fff8100: fa fa fd fd fa fa 00 02 fa fa 03 fa fa fa 01 fa
  0x0c047fff8110: fa fa fd fa fa fa 01 fa fa fa 02 fa fa fa 01 fa
=>0x0c047fff8120: fa fa 02 fa fa fa[04]fa fa fa fa fa fa fa fa fa
  0x0c047fff8130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8160: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8170: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
