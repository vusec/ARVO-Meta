INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 1979300414
INFO: Loaded 1 modules   (47561 inline 8-bit counters): 47561 [0xf77a80, 0xf83449), 
INFO: Loaded 1 PC tables (47561 PCs): 47561 [0xba9ee8,0xc63b78), 
/out/ffmpeg_AV_CODEC_ID_MPEG4_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60e0000005c7 at pc 0x0000005c35c3 bp 0x7fffed8e9810 sp 0x7fffed8e9808
READ of size 4 at 0x60e0000005c7 thread T0
SCARINESS: 17 (4-byte-read-heap-buffer-overflow)
    #0 0x5c35c2 in show_bits /src/ffmpeg/libavcodec/get_bits.h:462:5
    #1 0x5cb7fe in next_start_code_studio /src/ffmpeg/libavcodec/mpeg4videodec.c:1783:39
    #2 0x5d1f7b in decode_studio_vol_header /src/ffmpeg/libavcodec/mpeg4videodec.c:2291:5
    #3 0x5c7a91 in decode_vol_header /src/ffmpeg/libavcodec/mpeg4videodec.c:2317:16
    #4 0x5c70ac in ff_mpeg4_decode_picture_header /src/ffmpeg/libavcodec/mpeg4videodec.c:3328:24
    #5 0x856d06 in mpeg4_decode_header /src/ffmpeg/libavcodec/mpeg4video_parser.c:92:15
    #6 0x856932 in mpeg4video_parse /src/ffmpeg/libavcodec/mpeg4video_parser.c:149:5
    #7 0x60dda8 in av_parser_parse2 /src/ffmpeg/libavcodec/parser.c:161:13
    #8 0x577083 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:352:27
    #9 0x478583 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #10 0x463cc2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #11 0x46999e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #12 0x493482 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #13 0x7d488fc1783f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #14 0x43ed98 in _start (/out/ffmpeg_AV_CODEC_ID_MPEG4_fuzzer+0x43ed98)

DEDUP_TOKEN: show_bits--next_start_code_studio--decode_studio_vol_header
0x60e0000005c7 is located 0 bytes to the right of 71-byte region [0x60e000000580,0x60e0000005c7)
allocated by thread T0 here:
    #0 0x541f27 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:226:3
    #1 0xa0d1b5 in av_malloc /src/ffmpeg/libavutil/mem.c:87:9
    #2 0xa0e044 in av_memdup /src/ffmpeg/libavutil/mem.c:296:15
    #3 0x576b21 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:318:36
    #4 0x478583 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #5 0x463cc2 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #6 0x46999e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #7 0x493482 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #8 0x7d488fc1783f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: posix_memalign--av_malloc--av_memdup
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/get_bits.h:462:5 in show_bits
Shadow bytes around the buggy address:
  0x0c1c7fff8060: 00 00 fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1c7fff8070: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c1c7fff8080: 00 00 fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1c7fff8090: 00 00 00 00 00 00 00 00 00 00 fa fa fa fa fa fa
  0x0c1c7fff80a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
=>0x0c1c7fff80b0: 00 00 00 00 00 00 00 00[07]fa fa fa fa fa fa fa
  0x0c1c7fff80c0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c1c7fff80d0: 00 00 fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1c7fff80e0: fa fa fa fa fa fa fa fa 00 00 00 00 00 00 00 00
  0x0c1c7fff80f0: 00 00 fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c1c7fff8100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==7==ABORTING
