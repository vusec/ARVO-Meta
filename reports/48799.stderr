=================================================================
==7==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x73fb4b00f800 at pc 0x0000004c234c bp 0x7ffeae6ecd50 sp 0x7ffeae6ec518
WRITE of size 9 at 0x73fb4b00f800 thread T0
SCARINESS: 43 (9-byte-write-heap-buffer-overflow)
    #0 0x4c234b in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3
    #1 0x534e13 in lag_decode_zero_run_line /src/ffmpeg/libavcodec/lagarith.c:412:13
    #2 0x534e13 in lag_decode_arith_plane /src/ffmpeg/libavcodec/lagarith.c:484:27
    #3 0x53248f in lag_decode_frame /src/ffmpeg/libavcodec/lagarith.c:632:19
    #4 0x51999a in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:307:15
    #5 0x51999a in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:515:15
    #6 0x51999a in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:536:15
    #7 0x518f87 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:604:15
    #8 0x4ff9f5 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:482:25
    #9 0xdb844a in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7
    #10 0xdb821d in main /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:318:12
    #11 0x73fb4c77b082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082)
    #12 0x443b6d in _start (/out/ffmpeg_AV_CODEC_ID_LAGARITH_fuzzer+0x443b6d)

DEDUP_TOKEN: __asan_memcpy--lag_decode_zero_run_line--lag_decode_arith_plane
0x73fb4b00f800 is located 0 bytes to the right of 14737408-byte region [0x73fb4a201800,0x73fb4b00f800)
allocated by thread T0 here:
    #0 0x4c3897 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:210:3
    #1 0xd0bdbc in av_malloc /src/ffmpeg/libavutil/mem.c:105:9
    #2 0xcbf869 in av_buffer_alloc /src/ffmpeg/libavutil/buffer.c:82:12
    #3 0x5021dc in fuzz_video_get_buffer /src/ffmpeg/tools/target_dec_fuzzer.c:131:25
    #4 0x5021dc in fuzz_get_buffer2 /src/ffmpeg/tools/target_dec_fuzzer.c:152:18
    #5 0x5249a4 in ff_get_buffer /src/ffmpeg/libavcodec/decode.c:1458:11
    #6 0x573dab in thread_get_buffer_internal /src/ffmpeg/libavcodec/pthread_frame.c:956:16
    #7 0x573dab in ff_thread_get_buffer /src/ffmpeg/libavcodec/pthread_frame.c:1037:15
    #8 0x531f60 in lag_decode_frame /src/ffmpeg/libavcodec/lagarith.c:615:20
    #9 0x51999a in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:307:15
    #10 0x51999a in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:515:15
    #11 0x51999a in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:536:15
    #12 0x518f87 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:604:15
    #13 0x4ff9f5 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:482:25
    #14 0xdb844a in ExecuteFilesOnyByOne /src/aflplusplus/utils/aflpp_driver/aflpp_driver.c:234:7

DEDUP_TOKEN: posix_memalign--av_malloc--av_buffer_alloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3 in __asan_memcpy
Shadow bytes around the buggy address:
  0x0e7fe95f9eb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e7fe95f9ec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e7fe95f9ed0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e7fe95f9ee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e7fe95f9ef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0e7fe95f9f00:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0e7fe95f9f10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0e7fe95f9f20: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0e7fe95f9f30: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0e7fe95f9f40: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0e7fe95f9f50: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==7==ABORTING
