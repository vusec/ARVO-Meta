INFO: Seed: 3275704529
INFO: Loaded 1 modules   (43401 inline 8-bit counters): 43401 [0x8791540, 0x879bec9),
INFO: Loaded 1 PC tables (43401 PCs): 43401 [0x86f0e9c,0x8745ae4),
/out/decompress_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xe8200f38 at pc 0x081b8237 bp 0xffa1ab88 sp 0xffa1ab80
READ of size 1 at 0xe8200f38 thread T0
SCARINESS: 12 (1-byte-read-heap-buffer-overflow)
    #0 0x81b8236 in tinfl_decompress /src/c-blosc2/internal-complibs/miniz-2.0.8/miniz.c:2374:9
    #1 0x81b6070 in mz_inflate /src/c-blosc2/internal-complibs/miniz-2.0.8/miniz.c:434:18
    #2 0x81bd30c in mz_uncompress /src/c-blosc2/internal-complibs/miniz-2.0.8/miniz.c:543:14
    #3 0x820bebf in zlib_wrap_decompress /src/c-blosc2/blosc/blosc2.c:459:12
    #4 0x820bebf in blosc_d /src/c-blosc2/blosc/blosc2.c:1073:18
    #5 0x8201fc2 in serial_blosc /src/c-blosc2/blosc/blosc2.c:1176:18
    #6 0x8201fc2 in do_job /src/c-blosc2/blosc/blosc2.c:1335:15
    #7 0x820877d in blosc_run_decompression_with_context /src/c-blosc2/blosc/blosc2.c:2130:15
    #8 0x82094a8 in blosc2_decompress /src/c-blosc2/blosc/blosc2.c:2199:12
    #9 0x81ab15d in LLVMFuzzerTestOneInput /src/c-blosc2/tests/fuzz/fuzz_decompress.c:33:5
    #10 0x80a6db1 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:595:15
    #11 0x809213e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #12 0x8097e2f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:852:9
    #13 0x80bfed7 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #14 0xed357646 in __libc_start_main (/lib32/libc.so.6+0x18646)
    #15 0x806d128 in _start (/out/decompress_fuzzer+0x806d128)

DEDUP_TOKEN: tinfl_decompress--mz_inflate--mz_uncompress
0xe8200f38 is located 0 bytes to the right of 40-byte region [0xe8200f10,0xe8200f38)
allocated by thread T0 here:
    #0 0x8174b45 in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x8081744 in operator new(unsigned int) (/out/decompress_fuzzer+0x8081744)
    #2 0x809213e in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #3 0x8097e2f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned int)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:852:9
    #4 0x80bfed7 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #5 0xed357646 in __libc_start_main (/lib32/libc.so.6+0x18646)

DEDUP_TOKEN: malloc--operator new(unsigned int)--fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned int)
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/c-blosc2/internal-complibs/miniz-2.0.8/miniz.c:2374:9 in tinfl_decompress
Shadow bytes around the buggy address:
  0x3d040190: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d0401a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d0401b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d0401c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d0401d0: fa fa fa fa fa fa fa fa fa fa 00 00 00 00 00 fa
=>0x3d0401e0: fa fa 00 00 00 00 00[fa]fa fa 00 00 00 00 00 fa
  0x3d0401f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d040200: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d040210: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d040220: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x3d040230: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING