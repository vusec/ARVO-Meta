Accepting input from '/tmp/poc'
Usage for fuzzing: honggfuzz -P [flags] -- /out/ffmpeg_AV_CODEC_ID_HEVC_fuzzer
=================================================================
==13==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x624000003eb8 at pc 0x0000008c21d2 bp 0x7ffd3045c240 sp 0x7ffd3045c238
WRITE of size 1 at 0x624000003eb8 thread T0
SCARINESS: 31 (1-byte-write-heap-buffer-overflow)
    #0 0x8c21d1 in colour_mapping_table /src/ffmpeg/libavcodec/hevc_ps.c:1365:33
    #1 0x8c21d1 in pps_multilayer_extension /src/ffmpeg/libavcodec/hevc_ps.c:1424:9
    #2 0x8bea05 in ff_hevc_decode_nal_pps /src/ffmpeg/libavcodec/hevc_ps.c:1920:24
    #3 0x52b14a in decode_nal_unit /src/ffmpeg/libavcodec/hevcdec.c:3026:15
    #4 0x52b14a in decode_nal_units /src/ffmpeg/libavcodec/hevcdec.c:3249:15
    #5 0x52b14a in hevc_decode_frame /src/ffmpeg/libavcodec/hevcdec.c:3391:14
    #6 0x51438b in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:287:15
    #7 0x51438b in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:540:15
    #8 0x51438b in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:560:15
    #9 0x513b95 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:635:15
    #10 0x4ff62f in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:513:25
    #11 0xcbca2b in main (/out/ffmpeg_AV_CODEC_ID_HEVC_fuzzer+0xcbca2b)
    #12 0x7bde3d4d5082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)
    #13 0x43e4cd in _start (/out/ffmpeg_AV_CODEC_ID_HEVC_fuzzer+0x43e4cd)

DEDUP_TOKEN: colour_mapping_table--pps_multilayer_extension--ff_hevc_decode_nal_pps
0x624000003eb8 is located 0 bytes to the right of 7608-byte region [0x624000002100,0x624000003eb8)
allocated by thread T0 here:
    #0 0x4c0457 in posix_memalign /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0xc3a58a in av_malloc /src/ffmpeg/libavutil/mem.c:105:9
    #2 0xc3a58a in av_mallocz /src/ffmpeg/libavutil/mem.c:256:17
    #3 0x8bc9fe in ff_hevc_decode_nal_pps /src/ffmpeg/libavcodec/hevc_ps.c:1698:20
    #4 0x52b14a in decode_nal_unit /src/ffmpeg/libavcodec/hevcdec.c:3026:15
    #5 0x52b14a in decode_nal_units /src/ffmpeg/libavcodec/hevcdec.c:3249:15
    #6 0x52b14a in hevc_decode_frame /src/ffmpeg/libavcodec/hevcdec.c:3391:14
    #7 0x51438b in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:287:15
    #8 0x51438b in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:540:15
    #9 0x51438b in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:560:15
    #10 0x513b95 in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:635:15
    #11 0x4ff62f in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:513:25
    #12 0xcbca2b in main (/out/ffmpeg_AV_CODEC_ID_HEVC_fuzzer+0xcbca2b)

DEDUP_TOKEN: posix_memalign--av_malloc--av_mallocz
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/hevc_ps.c:1365:33 in colour_mapping_table
Shadow bytes around the buggy address:
  0x0c487fff8780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c487fff8790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c487fff87a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c487fff87b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c487fff87c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c487fff87d0: 00 00 00 00 00 00 00[fa]fa fa fa fa fa fa fa fa
  0x0c487fff87e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c487fff87f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c487fff8800: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c487fff8810: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c487fff8820: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==13==ABORTING