INFO: Seed: 3266210977
INFO: Loaded 1 modules (69659 guards): [0xe49190, 0xe8d1fc),
/out/ffmpeg_AV_CODEC_ID_SCPR_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==14==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x63100002550c at pc 0x00000057bfa9 bp 0x7ffc6e1842b0 sp 0x7ffc6e1842a8
WRITE of size 4 at 0x63100002550c thread T0
SCARINESS: 36 (4-byte-write-heap-buffer-overflow)
    #0 0x57bfa8 in decompress_i /src/ffmpeg/libavcodec/scpr.c:334:35
    #1 0x573a74 in decode_frame /src/ffmpeg/libavcodec/scpr.c
    #2 0x54756f in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:414:15
    #3 0x546b65 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:617:15
    #4 0x52ee9f in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:635:15
    #5 0x52c6bf in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:675:15
    #6 0x53070f in compat_decode /src/ffmpeg/libavcodec/decode.c:730:15
    #7 0x5194b2 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:213:23
    #8 0x8e1fa9 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:440:13
    #9 0x8e277a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:397:3
    #10 0x8b9ad6 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:268:6
    #11 0x8c4f76 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:682:9
    #12 0x8b90f8 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #13 0x7c727acb783f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #14 0x41d658 in _start (/out/ffmpeg_AV_CODEC_ID_SCPR_fuzzer+0x41d658)

DEDUP_TOKEN: decompress_i--decode_frame--decode_simple_internal
0x63100002550f is located 0 bytes to the right of 68879-byte region [0x631000014800,0x63100002550f)
allocated by thread T0 here:
    #0 0x4dcdc0 in __interceptor_posix_memalign /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:142
    #1 0x8369f4 in av_malloc /src/ffmpeg/libavutil/mem.c:87:9
    #2 0x7d67c9 in av_buffer_alloc /src/ffmpeg/libavutil/buffer.c:72:12
    #3 0x7d68ae in av_buffer_allocz /src/ffmpeg/libavutil/buffer.c:85:24
    #4 0x7db257 in pool_alloc_buffer /src/ffmpeg/libavutil/buffer.c:313:26
    #5 0x7da846 in av_buffer_pool_get /src/ffmpeg/libavutil/buffer.c:349:15
    #6 0x53c648 in video_get_buffer /src/ffmpeg/libavcodec/decode.c:1378:23
    #7 0x542d67 in get_buffer_internal /src/ffmpeg/libavcodec/decode.c:1604:11
    #8 0x542419 in ff_get_buffer /src/ffmpeg/libavcodec/decode.c:1619:15
    #9 0x544d30 in reget_buffer_internal /src/ffmpeg/libavcodec/decode.c:1643:16
    #10 0x5444c1 in ff_reget_buffer /src/ffmpeg/libavcodec/decode.c:1668:15
    #11 0x572745 in decode_frame /src/ffmpeg/libavcodec/scpr.c:749:16
    #12 0x54756f in decode_simple_internal /src/ffmpeg/libavcodec/decode.c:414:15
    #13 0x546b65 in decode_simple_receive_frame /src/ffmpeg/libavcodec/decode.c:617:15
    #14 0x52ee9f in decode_receive_frame_internal /src/ffmpeg/libavcodec/decode.c:635:15
    #15 0x52c6bf in avcodec_send_packet /src/ffmpeg/libavcodec/decode.c:675:15
    #16 0x53070f in compat_decode /src/ffmpeg/libavcodec/decode.c:730:15
    #17 0x5194b2 in LLVMFuzzerTestOneInput /src/ffmpeg/tools/target_dec_fuzzer.c:213:23
    #18 0x8e1fa9 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:440:13
    #19 0x8e277a in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:397:3
    #20 0x8b9ad6 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:268:6
    #21 0x8c4f76 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:682:9
    #22 0x8b90f8 in main /src/libfuzzer/FuzzerMain.cpp:20:10
    #23 0x7c727acb783f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)

DEDUP_TOKEN: __interceptor_posix_memalign--av_malloc--av_buffer_alloc
SUMMARY: AddressSanitizer: heap-buffer-overflow /src/ffmpeg/libavcodec/scpr.c:334:35 in decompress_i
Shadow bytes around the buggy address:
  0x0c627fffca50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c627fffca60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c627fffca70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c627fffca80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c627fffca90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c627fffcaa0: 00[07]fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c627fffcab0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c627fffcac0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c627fffcad0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c627fffcae0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c627fffcaf0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==14==ABORTING