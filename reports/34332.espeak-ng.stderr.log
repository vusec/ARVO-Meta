INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3281611769
INFO: Loaded 1 modules   (10244 inline 8-bit counters): 10244 [0x8bf2e0, 0x8c1ae4),
INFO: Loaded 1 PC tables (10244 PCs): 10244 [0x8c1ae8,0x8e9b28),
/out/ssml-fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7203bd78e120 at pc 0x000000521487 bp 0x7ffe7d2d0b30 sp 0x7ffe7d2d02f8
READ of size 16 at 0x7203bd78e120 thread T0
SCARINESS: 41 (multi-byte-read-stack-buffer-overflow)
    #0 0x521486 in __asan_memcpy /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3
    #1 0x579e09 in TranslateClause /src/espeak-ng/src/libespeak-ng/translate.c:2649:4
    #2 0x5694e3 in SpeakNextClause /src/espeak-ng/src/libespeak-ng/synthesize.c:1566:2
    #3 0x55779d in Synthesize /src/espeak-ng/src/libespeak-ng/speech.c:488:9
    #4 0x5571e9 in sync_espeak_Synth /src/espeak-ng/src/libespeak-ng/speech.c:566:29
    #5 0x55809e in espeak_ng_Synthesize /src/espeak-ng/src/libespeak-ng/speech.c:674:10
    #6 0x555b8c in espeak_Synth /src/espeak-ng/src/libespeak-ng/espeak_api.c:90:32
    #7 0x555810 in LLVMFuzzerTestOneInput /src/espeak-ng/tests/ssml-fuzzer.c:64:8
    #8 0x458aa3 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:599:15
    #9 0x444012 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:323:6
    #10 0x449ca1 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:856:9
    #11 0x473672 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #12 0x7203bc6d583f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2083f)
    #13 0x41ed38 in _start (/out/ssml-fuzzer+0x41ed38)

DEDUP_TOKEN: __asan_memcpy--TranslateClause--SpeakNextClause
Address 0x7203bd78e120 is located in stack of thread T0 at offset 6432 in frame
    #0 0x5746ef in TranslateClause /src/espeak-ng/src/libespeak-ng/translate.c:1985

DEDUP_TOKEN: TranslateClause
  This frame has 16 object(s):
    [32, 36) 'cc' (line 1988)
    [48, 52) 'source_index' (line 1989)
    [64, 68) 'prev_in' (line 1992)
    [80, 84) 'prev_out' (line 1993)
    [96, 100) 'next_in' (line 1996)
    [112, 116) 'char_inserted' (line 1998)
    [128, 132) 'word_flags' (line 2007)
    [144, 148) 'charix_top' (line 2019)
    [160, 1768) 'charix' (line 2021)
    [1904, 5504) 'words' (line 2022)
    [5632, 6432) 'sbuf' (line 2026) <== Memory access at offset 6432 overflows this variable
    [6560, 6564) 'tone' (line 2029)
    [6576, 6580) 'next2_in' (line 2338)
    [6592, 6596) 'c_temp' (line 2560)
    [6608, 6758) 'number_buf' (line 2564)
    [6832, 7432) 'num_wtab' (line 2565)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /src/llvm-project/compiler-rt/lib/asan/asan_interceptors_memintrinsics.cpp:22:3 in __asan_memcpy
Shadow bytes around the buggy address:
  0x0e40f7ae9bd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e40f7ae9be0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e40f7ae9bf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e40f7ae9c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e40f7ae9c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0e40f7ae9c20: 00 00 00 00[f2]f2 f2 f2 f2 f2 f2 f2 f2 f2 f2 f2
  0x0e40f7ae9c30: f2 f2 f2 f2 04 f2 f8 f2 04 f2 00 00 00 00 00 00
  0x0e40f7ae9c40: 00 00 00 00 00 00 00 00 00 00 00 00 06 f2 f2 f2
  0x0e40f7ae9c50: f2 f2 f2 f2 f2 f2 00 00 00 00 00 00 00 00 00 00
  0x0e40f7ae9c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0e40f7ae9c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==13==ABORTING