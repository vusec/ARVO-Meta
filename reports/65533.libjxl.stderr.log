INFO: Running with entropic power schedule (0xFF, 100).
INFO: Seed: 3302446502
INFO: Loaded 1 modules   (38372 inline 8-bit counters): 38372 [0x55a47c348b58, 0x55a47c35213c),
INFO: Loaded 1 PC tables (38372 PCs): 38372 [0x55a47c352140,0x55a47c3e7f80),
/out/djxl_fuzzer: Running 1 inputs 1 time(s) each.
Running: /tmp/poc
=================================================================
==13==ERROR: AddressSanitizer: global-buffer-overflow on address 0x55a47c270cc7 at pc 0x55a47c15d99b bp 0x7f5e70dff2c0 sp 0x7f5e70dff2b8
READ of size 16 at 0x55a47c270cc7 thread T3
SCARINESS: 26 (multi-byte-read-global-buffer-overflow)
    #0 0x55a47c15d99a in MakeUnsigned<unsigned char> /src/libjxl/lib/jxl/render_pipeline/stage_write.cc:74:19
    #1 0x55a47c15d99a in void jxl::N_SSE4::WriteToOutputStage::StoreUnsignedRow<unsigned char>(jxl::N_SSE4::WriteToOutputStage::Output const&, float const**, unsigned long, unsigned char*, unsigned long, unsigned long) const /src/libjxl/lib/jxl/render_pipeline/stage_write.cc:373:13
    #2 0x55a47c15ad50 in jxl::N_SSE4::WriteToOutputStage::OutputBuffers(jxl::N_SSE4::WriteToOutputStage::Output const&, unsigned long, unsigned long, unsigned long, unsigned long, float const**) const /src/libjxl/lib/jxl/render_pipeline/stage_write.cc:282:7
    #3 0x55a47c159045 in jxl::N_SSE4::WriteToOutputStage::ProcessRow(std::__1::vector<std::__1::vector<float*, std::__1::allocator<float*> >, std::__1::allocator<std::__1::vector<float*, std::__1::allocator<float*> > > > const&, std::__1::vector<std::__1::vector<float*, std::__1::allocator<float*> >, std::__1::allocator<std::__1::vector<float*, std::__1::allocator<float*> > > > const&, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) const /src/libjxl/lib/jxl/render_pipeline/stage_write.cc:156:7
    #4 0x55a47c03d6cd in jxl::LowMemoryRenderPipeline::RenderRect(unsigned long, std::__1::vector<jxl::Plane<float>, std::__1::allocator<jxl::Plane<float> > >&, jxl::RectT<unsigned long>, jxl::RectT<unsigned long>) /src/libjxl/lib/jxl/render_pipeline/low_memory_render_pipeline.cc:742:19
    #5 0x55a47c040c92 in jxl::LowMemoryRenderPipeline::ProcessBuffers(unsigned long, unsigned long) /src/libjxl/lib/jxl/render_pipeline/low_memory_render_pipeline.cc:860:5
    #6 0x55a47bc079fb in jxl::FrameDecoder::ProcessACGroup(unsigned long, jxl::BitReader* restrict*, unsigned long, unsigned long, bool, bool) /src/libjxl/lib/jxl/dec_frame.cc:547:29
    #7 0x55a47bc1223e in operator() /src/libjxl/lib/jxl/dec_frame.cc:698:5
    #8 0x55a47bc1223e in jxl::ThreadPool::RunCallState<jxl::FrameDecoder::ProcessSections(jxl::FrameDecoder::SectionInfo const*, unsigned long, jxl::FrameDecoder::SectionStatus*)::$_1, jxl::FrameDecoder::ProcessSections(jxl::FrameDecoder::SectionInfo const*, unsigned long, jxl::FrameDecoder::SectionStatus*)::$_2>::CallDataFunc(void*, unsigned int, unsigned long) /src/libjxl/lib/jxl/base/data_parallel.h:94:14
    #9 0x55a47c1afe04 in RunRange /src/libjxl/lib/threads/thread_parallel_runner_internal.cc:139:7
    #10 0x55a47c1afe04 in jpegxl::ThreadParallelRunner::ThreadFunc(jpegxl::ThreadParallelRunner*, int) /src/libjxl/lib/threads/thread_parallel_runner_internal.cc:169:9
    #11 0x55a47c1b18a2 in __invoke<void (*)(jpegxl::ThreadParallelRunner *, int), jpegxl::ThreadParallelRunner *, unsigned int> /usr/local/bin/../include/c++/v1/type_traits:3592:23
    #12 0x55a47c1b18a2 in __thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(jpegxl::ThreadParallelRunner *, int), jpegxl::ThreadParallelRunner *, unsigned int, 2UL, 3UL> /usr/local/bin/../include/c++/v1/thread:281:5
    #13 0x55a47c1b18a2 in void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void (*)(jpegxl::ThreadParallelRunner*, int), jpegxl::ThreadParallelRunner*, unsigned int> >(void*) /usr/local/bin/../include/c++/v1/thread:292:5
    #14 0x7f5e75f92608 in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x8608) (BuildId: c6d0d79d906d62bb768421fc6dada0d5e729f177)
    #15 0x7f5e75e8c352 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x11f352) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: MakeUnsigned<unsigned char>--void jxl::N_SSE4::WriteToOutputStage::StoreUnsignedRow<unsigned char>(jxl::N_SSE4::WriteToOutputStage::Output const&, float const**, unsigned long, unsigned char*, unsigned long, unsigned long) const--jxl::N_SSE4::WriteToOutputStage::OutputBuffers(jxl::N_SSE4::WriteToOutputStage::Output const&, unsigned long, unsigned long, unsigned long, unsigned long, float const**) const
0x55a47c270cc7 is located 57 bytes to the left of global variable '<string literal>' defined in '/src/libjxl/lib/jxl/render_pipeline/stage_write.cc:176:49' (0x55a47c270d00) of size 13
  '<string literal>' is ascii string 'WritePixelCB'
0x55a47c270cc7 is located 7 bytes to the right of global variable 'jxl::N_SSE4::kDither' defined in '/src/libjxl/lib/jxl/render_pipeline/stage_write.cc:41:13' (0x55a47c270bc0) of size 256
SUMMARY: AddressSanitizer: global-buffer-overflow /src/libjxl/lib/jxl/render_pipeline/stage_write.cc:74:19 in MakeUnsigned<unsigned char>
Shadow bytes around the buggy address:
  0x0ab50f846140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ab50f846150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ab50f846160: 00 f9 f9 f9 00 f9 f9 f9 00 f9 f9 f9 00 f9 f9 f9
  0x0ab50f846170: 00 f9 f9 f9 00 f9 f9 f9 00 00 00 00 00 00 00 00
  0x0ab50f846180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0ab50f846190: 00 00 00 00 00 00 00 00[f9]f9 f9 f9 f9 f9 f9 f9
  0x0ab50f8461a0: 00 05 f9 f9 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ab50f8461b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ab50f8461c0: 00 00 00 00 f9 f9 f9 f9 f9 f9 f9 f9 00 00 00 00
  0x0ab50f8461d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0ab50f8461e0: 00 00 00 00 00 00 00 00 00 00 00 00 f9 f9 f9 f9
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
Thread T3 created by T0 here:
    #0 0x55a47b9f19ac in pthread_create /src/llvm-project/compiler-rt/lib/asan/asan_interceptors.cpp:208:3
    #1 0x55a47c1b1118 in __libcpp_thread_create /usr/local/bin/../include/c++/v1/__threading_support:375:10
    #2 0x55a47c1b1118 in thread<void (&)(jpegxl::ThreadParallelRunner *, int), jpegxl::ThreadParallelRunner *, unsigned int &, void> /usr/local/bin/../include/c++/v1/thread:308:16
    #3 0x55a47c1b1118 in construct<std::__1::thread, void (&)(jpegxl::ThreadParallelRunner *, int), jpegxl::ThreadParallelRunner *, unsigned int &> /usr/local/bin/../include/c++/v1/__memory/allocator.h:151:28
    #4 0x55a47c1b1118 in construct<std::__1::thread, void (&)(jpegxl::ThreadParallelRunner *, int), jpegxl::ThreadParallelRunner *, unsigned int &, void> /usr/local/bin/../include/c++/v1/__memory/allocator_traits.h:290:13
    #5 0x55a47c1b1118 in void std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread> >::__construct_one_at_end<void (&)(jpegxl::ThreadParallelRunner*, int), jpegxl::ThreadParallelRunner*, unsigned int&>(void (&)(jpegxl::ThreadParallelRunner*, int), jpegxl::ThreadParallelRunner*&&, unsigned int&) /usr/local/bin/../include/c++/v1/vector:787:5
    #6 0x55a47c1b0406 in emplace_back<void (&)(jpegxl::ThreadParallelRunner *, int), jpegxl::ThreadParallelRunner *, unsigned int &> /usr/local/bin/../include/c++/v1/vector:1586:9
    #7 0x55a47c1b0406 in jpegxl::ThreadParallelRunner::ThreadParallelRunner(int) /src/libjxl/lib/threads/thread_parallel_runner_internal.cc:188:14
    #8 0x55a47c1aec42 in JxlThreadParallelRunnerCreate /src/libjxl/lib/threads/thread_parallel_runner.cc:80:19
    #9 0x55a47ba45f7b in JxlThreadParallelRunnerMake /src/libjxl/lib/include/jxl/thread_parallel_runner_cxx.h:59:7
    #10 0x55a47ba45f7b in DecodeJpegXl /src/libjxl/tools/djxl_fuzzer.cc:74:17
    #11 0x55a47ba45f7b in TestOneInput /src/libjxl/tools/djxl_fuzzer.cc:554:3
    #12 0x55a47ba45f7b in LLVMFuzzerTestOneInput /src/libjxl/tools/djxl_fuzzer.cc:564:10
    #13 0x55a47b917123 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:611:15
    #14 0x55a47b902882 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:324:6
    #15 0x55a47b90812c in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:860:9
    #16 0x55a47b931662 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
    #17 0x7f5e75d91082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082) (BuildId: 87b331c034a6458c64ce09c03939e947212e18ce)

DEDUP_TOKEN: pthread_create--__libcpp_thread_create--thread<void (&)(jpegxl::ThreadParallelRunner *, int), jpegxl::ThreadParallelRunner *, unsigned int &, void>
==13==ABORTING